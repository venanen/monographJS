{"version":3,"sources":["az/dist/az.js","serviceWorker.js","components/MainSectionAbout.jsx","components/UploadToolbar.jsx","components/Upload.jsx","core/fileProcess.js","core/config.js","core/makeDataForChart.js","core/makeDataForSummaryStatistic.js","stores/uiLogger.js","stores/dataForChartStore.js","core/analyzeProcess.js","stores/mainStore.js","components/ErrorMessage.jsx","containers/UploadContainer.jsx","components/MainSection.jsx","components/Background.jsx","charts/WordsFrequence.jsx","charts/PhonemeFrequencyRadar.jsx","charts/SummaryStatistic.jsx","components/AnalyzeSection.jsx","containers/AnalyzeSectionContainer.jsx","components/Loading.jsx","containers/LoadingContainer.jsx","App.js","index.js"],"names":["__dirname","factory","load","url","responseType","callback","xhr","XMLHttpRequest","open","onload","e","response","send","extend","result","i","arguments","length","key","this","Az","module","exports","DAWG","PRECISION_MASK","HAS_LEAF_BIT","EXTENSION_BIT","IS_LEAF_BIT","CP1251","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","1027","8225","1046","8222","1047","1168","1048","1113","1049","1045","1050","1028","160","1040","1051","164","166","167","169","171","172","173","174","1053","176","177","1114","181","182","183","8221","187","1029","1056","1057","1058","8364","1112","1115","1059","1060","1030","1061","1062","1063","1116","1064","1065","1031","1066","1067","1068","1069","1070","1032","8226","1071","1072","8482","1073","8240","1118","1074","1110","8230","1075","1033","1076","1077","8211","1078","1119","1079","1042","1080","1034","1025","1081","1082","8212","1083","1169","1084","1052","1085","1035","1086","1087","1088","1089","1090","1036","1041","1091","1092","8224","1093","8470","1094","1054","1095","1096","8249","1097","1098","1044","1099","1111","1055","1100","1038","8220","1101","8250","1102","8216","1103","1043","1105","1039","1026","1106","8218","1107","8217","1108","1109","UCS2","k","String","fromCharCode","COMMON_TYPOS","й","ц","у","к","е","н","г","ш","щ","з","х","ъ","ф","ы","в","а","п","р","о","л","д","ж","э","ё","я","ч","с","м","и","т","ь","б","ю","-","=","\\",".","offset","base","units","guide","format","fromArrayBuffer","data","dv","DataView","unitsLength","getUint32","guideLength","Uint32Array","Uint8Array","err","prototype","followByte","c","index","nextIndex","followString","str","code","charCodeAt","hasValue","value","valueIndex","find","iterateAll","label","results","stack","last","push","pop","slice","findAll","replaces","mstutter","mtypos","prefix","len","cur","typos","stutter","prefixes","possible","Morph","words","probabilities","suffixes","grammemes","paradigms","tags","UNKN","predictionSuffixes","Array","defaults","ignoreCase","replacements","Infinity","parsers","forceParse","normalizeScore","initials","particles","knownPrefixes","autoTypos","__init","initialized","deepFreeze","obj","Object","propNames","getOwnPropertyNames","forEach","name","prop","freeze","Tag","par","pair","split","stat","flex","j","grams","gram","parent","POS","POST","makeTag","tagInt","tagExt","tag","ext","toString","join","trim","matches","call","indexOf","Parse","isProductive","NUMR","NPRO","PRED","PREP","CONJ","PRCL","INTJ","Apro","NUMB","ROMN","LATN","PNCT","isCapitalized","Name","Surn","Patr","Geox","Init","word","config","Error","parses","matched","terminal","Parsers","vars","parser","stutterCnt","typosCnt","concat","console","warn","toLocaleLowerCase","total","res","score","getDictionaryScore","sort","e1","e2","lookup","dawg","entries","Math","pow","min","normalize","keepPOS","inflect","pluralize","number","NOUN","ADJF","PRTF","nomn","accs","femn","CAse","log","group","groupEnd","DictionaryParse","paradigmIdx","formIdx","suffix","paradigm","formCnt","create","constructor","_base","substring","norm","groupCollapsed","form","pref","substr","CombinedParse","left","right","Dictionary","toLocaleUpperCase","opts","w","abbrTags","Abbr","caps","InitialsParser","isPatronymic","initialsTags","AbbrName","AbbrPatronymic","RegexpParser","regexp","match","IntNumber","RealNumber","Punctuation","RomanNumber","Latin","HyphenParticle","ADVB","HyphenAdverb","used","parse","HyphenWords","parts","end","PrefixKnown","PrefixUnknown","SuffixKnown","minlen","coeffs","p","max","stats","setDefaults","init","path","tagsInt","tagsExt","loading","loaded","outOfLoop","json","internal","external","externalFull","list","Uint16Array","count","pos","size","subarray","Syntax","Tokens","TLDs","html","wiki","markdown","hashtags","mentions","emails","links","protocols","www","tlds","HTML_ENTITIES","nbsp","quot","gt","lt","amp","ndash","Token","source","st","firstUpper","allUpper","type","subType","_str","toLowerCase","en","text","tokens","append","getMatcher","filter","exclude","exclusive","types","token","array","sub","WORD","NUMBER","OTHER","DIGIT","CYRIL","LATIN","MIXED","PUNCT","SPACE","MARKUP","NEWLINE","EMAIL","LINK","HASHTAG","MENTION","TAG","CONTENT","SCRIPT","STYLE","COMMENT","CLOSING","TEMPLATE","RANGE","ENTITY","offs","s","ts","ch","parseInt","charType","charUpper","tokenType","tokenSubType","lineStart","quote","found","done","matcher","nextToken","moveIndex","punctAhead","prevToken","punctBehind","hasTokensAhead","hasTokensBehind","Boolean","window","location","hostname","components_MainSectionAbout","react_default","a","createElement","className","UploadToolbar","_ref","refs","lib","block","onClick","current","click","appearance","UploadWrapper","error","onFileChange","file","readyToProcess","useRef","src_components_UploadToolbar","onChange","ref","fileProcess","_this","Promise","resolve","reject","undefined","test","fileReader","FileReader","onerror","onabort","readAsText","excludeGramems","gramemeTitle","ADJS","COMP","VERB","INFN","PRTS","GRND","makeDataForChart","b","tempWords","tempKeys","counter","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","_ref3","_ref2","slicedToArray","return","makeDataForSummaryStatistic","outputData","edited","input","editedWords","keys","countWords","rawText","countLetters","LoggerAnalyze","isBarShow","currentText","maxStep","decorate","observable","currentStepDescription","computed","isShow","showBar","action","hideBar","setStep","loggerAnalyze","DataForWordFrequency","setData","DataForPhonemeFrequency","DataForSummaryStatistic","formattedText","dataForWordFrequency","dataForPhonemeFrequency","dataForSummaryStatistic","analyzeProcess","filterTags","phonemes","countTokens","morphemsInit","then","makeTokens","getWordsFrequency","makeData","createDataToChart","sortObject","_this2","tokensObject","_this3","map","elem","getTextFromToken","normalizeWord","tempWord","collectPhonems","includes","phoneme","FileUploadStore","isUploadedFile","isInsertedText","secondSectionIsShow","validateFile","startAnalyze","enterFile","clearError","fileUploadStore","ErrorMessage","message","onCloseAlert","react","Alert","handleFileChange","files","handleCloseAlert","observer","components_ErrorMessage","components_Upload","run","MainSection","containers_UploadContainer","canvasStyle","position","particleParams","navigator","userAgent","color","line_linked","enable_auto","opacity","distance","interactivity","events","onhover","enable","mode","ParticlesBackground","particles_default","params","style","WordFrequency","dataWF","_dataWF","options","chart","height","width","zoom","enabled","plotOptions","bar","horizontal","barHeight","dataLabels","xaxis","categories","offsetY","axisBorder","show","axisTicks","serias","react_apexcharts_min_default","series","PhonemeFrequencyRadar","dataForPF","_dataForPF","russianPhoneme","option","labels","title","Line","Progress","SummaryStatistic","dataSS","progressWords","toFixed","progressLetters","fluid","xs","bordered","header","percent","strokeColor","trailColor","esm","readOnly","rows","AnalyzeSection","dataWordsFrequency","dataPhonemeFrequency","dataSummaryStatistics","classes","charts_SummaryStatistic","WordsFrequence","charts_PhonemeFrequencyRadar","src_components_AnalyzeSection","Loading","currentStep","inverse","center","content","src_components_Loading","App","src_components_MainSection","containers_AnalyzeSectionContainer","containers_LoadingContainer","components_Background","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e22ab66.chunk.js","sourcesContent":[";(function (global, factory) {\n  global.Az = factory;\n  module.exports = factory()\n}(this, function () { ;\n  /** @namespace Az **/\n  if (typeof require !== 'undefined' && typeof exports === 'object' && typeof module !== 'undefined') {\n   // var fs = require('fs');\n  }\n\n  var Az = {\n    load: function(url, responseType, callback) {\n\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = responseType;\n\n      xhr.onload = function (e) {\n        if (xhr.response) {\n          callback && callback(null, xhr.response);\n        }\n      };\n\n      xhr.send(null);\n    },\n    extend: function() {\n      var result = {};\n      for (var i = 0; i < arguments.length; i++) {\n        for (var key in arguments[i]) {\n          result[key] = arguments[i][key];\n        }\n      }\n      return result;\n    }\n  };\n\n  return Az;\n}));\n\n;(function (global, factory) {\n  (module.exports = module.exports || {}) && (module.exports.DAWG = factory(module.exports))\n}(this, function (Az) { ;\n  var ROOT = 0,\n      MISSING = -1,\n      PRECISION_MASK = 0xFFFFFFFF,\n      HAS_LEAF_BIT = 1 << 8,\n      EXTENSION_BIT = 1 << 9,\n      //OFFSET_MAX = 1 << 21,\n      IS_LEAF_BIT = 1 << 31;\n\n  var CP1251 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 11: 11, 12: 12, 13: 13, 14: 14, 15: 15, 16: 16,\n    17: 17, 18: 18, 19: 19, 20: 20, 21: 21, 22: 22, 23: 23, 24: 24, 25: 25, 26: 26, 27: 27, 28: 28, 29: 29, 30: 30, 31: 31, 32: 32,\n    33: 33, 34: 34, 35: 35, 36: 36, 37: 37, 38: 38, 39: 39, 40: 40, 41: 41, 42: 42, 43: 43, 44: 44, 45: 45, 46: 46, 47: 47, 48: 48,\n    49: 49, 50: 50, 51: 51, 52: 52, 53: 53, 54: 54, 55: 55, 56: 56, 57: 57, 58: 58, 59: 59, 60: 60, 61: 61, 62: 62, 63: 63, 64: 64,\n    65: 65, 66: 66, 67: 67, 68: 68, 69: 69, 70: 70, 71: 71, 72: 72, 73: 73, 74: 74, 75: 75, 76: 76, 77: 77, 78: 78, 79: 79, 80: 80,\n    81: 81, 82: 82, 83: 83, 84: 84, 85: 85, 86: 86, 87: 87, 88: 88, 89: 89, 90: 90, 91: 91, 92: 92, 93: 93, 94: 94, 95: 95, 96: 96,\n    97: 97, 98: 98, 99: 99, 100: 100, 101: 101, 102: 102, 103: 103, 104: 104, 105: 105, 106: 106, 107: 107, 108: 108, 109: 109, 110: 110, 111: 111, 112: 112,\n    113: 113, 114: 114, 115: 115, 116: 116, 117: 117, 118: 118, 119: 119, 120: 120, 121: 121, 122: 122, 123: 123, 124: 124, 125: 125, 126: 126, 127: 127,\n    1027: 129, 8225: 135, 1046: 198, 8222: 132, 1047: 199, 1168: 165, 1048: 200, 1113: 154, 1049: 201, 1045: 197, 1050: 202, 1028: 170, 160: 160, 1040: 192,\n    1051: 203, 164: 164, 166: 166, 167: 167, 169: 169, 171: 171, 172: 172, 173: 173, 174: 174, 1053: 205, 176: 176, 177: 177, 1114: 156, 181: 181, 182: 182,\n    183: 183, 8221: 148, 187: 187, 1029: 189, 1056: 208, 1057: 209, 1058: 210, 8364: 136, 1112: 188, 1115: 158, 1059: 211, 1060: 212, 1030: 178, 1061: 213,\n    1062: 214, 1063: 215, 1116: 157, 1064: 216, 1065: 217, 1031: 175, 1066: 218, 1067: 219, 1068: 220, 1069: 221, 1070: 222, 1032: 163, 8226: 149, 1071: 223,\n    1072: 224, 8482: 153, 1073: 225, 8240: 137, 1118: 162, 1074: 226, 1110: 179, 8230: 133, 1075: 227, 1033: 138, 1076: 228, 1077: 229, 8211: 150, 1078: 230,\n    1119: 159, 1079: 231, 1042: 194, 1080: 232, 1034: 140, 1025: 168, 1081: 233, 1082: 234, 8212: 151, 1083: 235, 1169: 180, 1084: 236, 1052: 204, 1085: 237,\n    1035: 142, 1086: 238, 1087: 239, 1088: 240, 1089: 241, 1090: 242, 1036: 141, 1041: 193, 1091: 243, 1092: 244, 8224: 134, 1093: 245, 8470: 185, 1094: 246,\n    1054: 206, 1095: 247, 1096: 248, 8249: 139, 1097: 249, 1098: 250, 1044: 196, 1099: 251, 1111: 191, 1055: 207, 1100: 252, 1038: 161, 8220: 147, 1101: 253,\n    8250: 155, 1102: 254, 8216: 145, 1103: 255, 1043: 195, 1105: 184, 1039: 143, 1026: 128, 1106: 144, 8218: 130, 1107: 131, 8217: 146, 1108: 186, 1109: 190};\n\n  var UCS2 = {};\n  for (var k in CP1251) {\n    UCS2[CP1251[k]] = String.fromCharCode(k);\n    delete UCS2[0];\n    delete UCS2[1];\n  }\n\n  // Based on all common ЙЦУКЕН-keyboards (both Windows and Apple variations)\n  var COMMON_TYPOS = {\n    'й': 'ёцыф', 'ц': 'йфыву', 'у': 'цывак', 'к': 'увапе', 'е': 'капрн', 'н': 'епрог', 'г': 'нролш', 'ш': 'голдщ', 'щ': 'шлджз', 'з': 'щджэх-', 'х': 'зжэъ-', 'ъ': 'хэ-ё',\n    'ф': 'йцычяё', 'ы': 'йцувсчяф', 'в': 'цукамсчы', 'а': 'укепимсв', 'п': 'кенртима', 'р': 'енгоьтип', 'о': 'нгшлбьтр', 'л': 'гшщдюбьо', 'д': 'шщзжюбл', 'ж': 'щзхэюд', 'э': 'зхъжё',\n    'ё': 'йфяъэ', 'я': 'ёфыч', 'ч': 'яфывс', 'с': 'чывам', 'м': 'свапи', 'и': 'мапрт', 'т': 'ипроь', 'ь': 'тролб', 'б': 'ьолдю', 'ю': 'блдж',\n    '1': 'ёйц', '2': 'йцу', '3': 'цук', '4': 'уке', '5': 'кен', '6': 'енг', '7': 'нгш', '8': 'гшщ', '9': 'шщз', '0': 'щзх-', '-': 'зхъ', '=': '-хъ', '\\\\': 'ъэ', '.': 'южэ'\n  };\n\n  function offset(base) {\n    return ((base >> 10) << ((base & EXTENSION_BIT) >> 6)) & PRECISION_MASK;\n  }\n\n  function label(base) {\n    return base & (IS_LEAF_BIT | 0xFF) & PRECISION_MASK;\n  }\n\n  function hasLeaf(base) {\n    return (base & HAS_LEAF_BIT & PRECISION_MASK) !== 0;\n  }\n\n  function value(base) {\n    return base & ~IS_LEAF_BIT & PRECISION_MASK;\n  }\n\n  var DAWG = function(units, guide, format) {\n    this.units = units;\n    this.guide = guide;\n    this.format = format;\n  }\n\n  DAWG.fromArrayBuffer = function(data, format) {\n    var dv = new DataView(data),\n        unitsLength = dv.getUint32(0, true),\n        guideLength = dv.getUint32(unitsLength * 4 + 4, true);\n    return new DAWG(\n      new Uint32Array(data, 4, unitsLength),\n      new Uint8Array(data, unitsLength * 4 + 8, guideLength * 2),\n      format);\n  }\n\n  DAWG.load = function(url, format, callback) {\n    Az.load(url, 'arraybuffer', function(err, data) {\n      callback(err, err ? null : DAWG.fromArrayBuffer(data, format));\n    });\n  }\n\n  DAWG.prototype.followByte = function(c, index) {\n    var o = offset(this.units[index]);\n    var nextIndex = (index ^ o ^ (c & 0xFF)) & PRECISION_MASK;\n\n    if (label(this.units[nextIndex]) !== (c & 0xFF)) {\n      return MISSING;\n    }\n\n    return nextIndex;\n  }\n\n  DAWG.prototype.followString = function(str, index) {\n    index = index || ROOT;\n    for (var i = 0; i < str.length; i++) {\n      var code = str.charCodeAt(i);\n      if (!(code in CP1251)) {\n        return MISSING;\n      }\n      index = this.followByte(CP1251[code], index);\n      if (index === MISSING) {\n        return MISSING;\n      }\n    }\n    return index;\n  }\n\n  DAWG.prototype.hasValue = function(index) {\n    return hasLeaf(this.units[index]);\n  }\n\n  DAWG.prototype.value = function(index) {\n    var o = offset(this.units[index]);\n    var valueIndex = (index ^ o) & PRECISION_MASK;\n    return value(this.units[valueIndex]);\n  }\n\n  DAWG.prototype.find = function(str) {\n    var index = this.followString(str);\n    if (index === MISSING) {\n        return MISSING;\n    }\n    if (!this.hasValue(index)) {\n        return MISSING;\n    }\n    return this.value(index);\n  }\n\n  DAWG.prototype.iterateAll = function(index) {\n    var results = [];\n    var stack = [index];\n    var key = [];\n    var last = ROOT;\n    var label;\n\n    while (true) {\n      index = stack[stack.length - 1];\n\n      if (last !== ROOT) {\n        label = this.guide[index << 1];\n        if (label) {\n          index = this.followByte(label, index);\n          if (index === MISSING) {\n            return results;\n          }\n          key.push(label);\n          stack.push(index);\n        } else {\n          do {\n            label = this.guide[(index << 1) + 1];\n            key.pop();\n            stack.pop();\n            if (!stack.length) {\n              return results;\n            }\n            index = stack[stack.length - 1];\n            if (label) {\n              index = this.followByte(label, index);\n              if (index === MISSING) {\n                return results;\n              }\n              key.push(label);\n              stack.push(index);\n            }\n          } while (!label);\n        }\n      }\n\n      while (!this.hasValue(index)) {\n       label = this.guide[index << 1];\n        index = this.followByte(label, index);\n        if (index === MISSING) {\n          return results;\n        }\n        key.push(label);\n        stack.push(index);\n      }\n\n      // Only three formats supported\n      if (this.format === 'words') {\n        results.push([\n          ((key[0] ^ 1) << 6) + (key[1] >> 1),\n          ((key[2] ^ 1) << 6) + (key[3] >> 1)\n        ]);\n      } else\n      if (this.format === 'probs') {\n        results.push([\n          ((key[0] ^ 1) << 6) + (key[1] >> 1),\n          ((key[2] ^ 1) << 6) + (key[3] >> 1),\n          ((key[4] ^ 1) << 6) + (key[5] >> 1)\n        ]);\n      } else {\n        // Raw bytes\n        results.push(key.slice());\n      }\n      last = index;\n    }\n  }\n\n  // Features:\n  //  replaces (е -> ё) (DONE)\n  //  stutter (ннет -> нет, гоол -> гол, д-да -> да)\n  //  typos (count-limited):\n  //    swaps (солво -> слово)\n  //    extra letters (свлово -> слово)\n  //    missing letters (сово -> слово)\n  //    wrong letters (сково -> слово)\n  DAWG.prototype.findAll = function(str, replaces, mstutter, mtypos) {\n    mtypos = mtypos || 0;\n    mstutter = mstutter || 0;\n    var results = [],\n        prefixes = [['', 0, 0, 0, ROOT]],\n        prefix, index, len, code, cur, typos, stutter;\n\n    while (prefixes.length) {\n      prefix = prefixes.pop();\n      index = prefix[4]\n        stutter = prefix[3]\n        typos = prefix[2]\n        len = prefix[1]\n        prefix = prefix[0];\n\n      // Done\n      if (len === str.length) {\n        if (typos < mtypos && !stutter) {\n          // Allow missing letter(s) at the very end\n          var label = this.guide[index << 1]; // First child\n          do {\n            cur = this.followByte(label, index);\n            if ((cur !== MISSING) && (label in UCS2)) {\n              prefixes.push([ prefix + UCS2[label], len, typos + 1, stutter, cur ]);\n            }\n            label = this.guide[(cur << 1) + 1]; // Next child\n          } while (cur !== MISSING);\n        }\n\n        if (this.format === 'int') {\n          if (this.hasValue(index)) {\n            results.push([prefix, this.value(index)]);\n          }\n          continue;\n        }\n        // Find all payloads\n        if (this.format === 'words' || this.format === 'probs') {\n          index = this.followByte(1, index); // separator\n          if (index === MISSING) {\n            continue;\n          }\n        }\n        results.push([prefix, this.iterateAll(index), stutter, typos]);\n        continue;\n      }\n\n      // Follow a replacement path\n      if (replaces && str[len] in replaces) {\n        code = replaces[str[len]].charCodeAt(0);\n        if (code in CP1251) {\n          cur = this.followByte(CP1251[code], index);\n          if (cur !== MISSING) {\n            prefixes.push([ prefix + replaces[str[len]], len + 1, typos, stutter, cur ]);\n          }\n        }\n      }\n\n      // Follow typos path (if not over limit)\n      if (typos < mtypos && !stutter) {\n        // Skip a letter entirely (extra letter)\n        prefixes.push([ prefix, len + 1, typos + 1, stutter, index ]);\n\n        // Add a letter (missing)\n        // TODO: iterate all childs?\n        label = this.guide[index << 1]; // First child\n        do {\n          cur = this.followByte(label, index);\n          if ((cur !== MISSING) && (label in UCS2)) {\n            prefixes.push([ prefix + UCS2[label], len, typos + 1, stutter, cur ]);\n          }\n          label = this.guide[(cur << 1) + 1]; // Next child\n        } while (cur !== MISSING);\n\n        // Replace a letter\n        // Now it checks only most probable typos (located near to each other on keyboards)\n        var possible = COMMON_TYPOS[str[len]];\n        if (possible) {\n          for (var i = 0; i < possible.length; i++) {\n            code = possible.charCodeAt(i);\n            if (code in CP1251) {\n              cur = this.followByte(CP1251[code], index);\n              if (cur !== MISSING) {\n                // for missing letter we need to iterate all childs, not only COMMON_TYPOS\n                // prefixes.push([ prefix + possible[i], len, typos + 1, stutter, cur ]);\n                prefixes.push([ prefix + possible[i], len + 1, typos + 1, stutter, cur ]);\n              }\n            }\n          }\n        }\n\n        // Swapped two letters\n        // TODO: support for replacements?\n        if (len < str.length - 1) {\n          code = str.charCodeAt(len + 1);\n          if (code in CP1251) {\n            cur = this.followByte(CP1251[code], index);\n            if (cur !== MISSING) {\n              code = str.charCodeAt(len);\n              if (code in CP1251) {\n                cur = this.followByte(CP1251[code], cur);\n                if (cur !== MISSING) {\n                  prefixes.push([ prefix + str[len + 1] + str[len], len + 2, typos + 1, stutter, cur ]);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      // Follow base path\n      code = str.charCodeAt(len);\n      if (code in CP1251) {\n        cur = this.followByte(CP1251[code], index);\n        if (cur !== MISSING) {\n          prefixes.push([ prefix + str[len], len + 1, typos, stutter, cur ]);\n\n          while (stutter < mstutter && !typos && len < str.length - 1) {\n            // Follow a simple stutter path (merge two equal letters into one)\n            if (str[len] === str[len + 1]) {\n              prefixes.push([ prefix + str[len], len + 2, typos, stutter + 1, cur ]);\n              len++;\n            } else\n            // Follow a stutter with a dash (д-да)\n            if (len < str.length - 2 && str[len + 1] === '-' && str[len] === str[len + 2]) {\n              prefixes.push([ prefix + str[len], len + 3, typos, stutter + 1, cur ]);\n              len += 2;\n            } else {\n              break;\n            }\n            stutter++;\n          }\n        }\n      }\n    }\n    return results;\n  }\n\n  return DAWG;\n}));\n;(function (global, factory) {\n    (module.exports = module.exports || {}) && (module.exports.Morph = factory(module.exports))\n}(this, function (Az) { ;\n  /** @namespace Az **/\n  var words,\n      probabilities,\n      predictionSuffixes = new Array(3),\n      prefixes = [ '', 'по', 'наи' ],\n      suffixes,\n      grammemes,\n      paradigms,\n      tags,\n      defaults = {\n        ignoreCase: false,\n        replacements: { 'е': 'ё' },\n        stutter: Infinity,\n        typos: 0,\n        parsers: [\n          // Словарные слова + инициалы\n          'Dictionary?', 'AbbrName?', 'AbbrPatronymic',\n          // Числа, пунктуация, латиница (по-хорошему, токенизатор не должен эту ерунду сюда пускать)\n          'IntNumber', 'RealNumber', 'Punctuation', 'RomanNumber?', 'Latin',\n          // Слова с дефисами\n          'HyphenParticle', 'HyphenAdverb', 'HyphenWords',\n          // Предсказатели по префиксам/суффиксам\n          'PrefixKnown', 'PrefixUnknown?', 'SuffixKnown?', 'Abbr'\n        ],\n        forceParse: false,\n        normalizeScore: true\n      },\n      initials = 'АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЭЮЯ',\n      particles = ['-то', '-ка', '-таки', '-де', '-тко', '-тка', '-с', '-ста'],\n      knownPrefixes = [\n        'авиа', 'авто', 'аква', 'анти', 'анти-', 'антропо', 'архи', 'арт', 'арт-', 'астро', 'аудио', 'аэро',\n        'без', 'бес', 'био', 'вело', 'взаимо', 'вне', 'внутри', 'видео', 'вице-', 'вперед', 'впереди',\n        'гекто', 'гелио', 'гео', 'гетеро', 'гига', 'гигро', 'гипер', 'гипо', 'гомо',\n        'дву', 'двух', 'де', 'дез', 'дека', 'деци', 'дис', 'до', 'евро', 'за', 'зоо', 'интер', 'инфра',\n        'квази', 'квази-', 'кило', 'кино', 'контр', 'контр-', 'космо', 'космо-', 'крипто', 'лейб-', 'лже', 'лже-',\n        'макро', 'макси', 'макси-', 'мало', 'меж', 'медиа', 'медиа-', 'мега', 'мета', 'мета-', 'метео', 'метро', 'микро',\n        'милли', 'мини', 'мини-', 'моно', 'мото', 'много', 'мульти',\n        'нано', 'нарко', 'не', 'небез', 'недо', 'нейро', 'нео', 'низко', 'обер-', 'обще', 'одно', 'около', 'орто',\n        'палео', 'пан', 'пара', 'пента', 'пере', 'пиро', 'поли', 'полу', 'после', 'пост', 'пост-',\n        'порно', 'пра', 'пра-', 'пред', 'пресс-', 'противо', 'противо-', 'прото', 'псевдо', 'псевдо-',\n        'радио', 'разно', 'ре', 'ретро', 'ретро-', 'само', 'санти', 'сверх', 'сверх-', 'спец', 'суб', 'супер', 'супер-', 'супра',\n        'теле', 'тетра', 'топ-', 'транс', 'транс-', 'ультра', 'унтер-', 'штаб-',\n        'экзо', 'эко', 'эндо', 'эконом-', 'экс', 'экс-', 'экстра', 'экстра-', 'электро', 'энерго', 'этно'\n      ],\n      autoTypos = [4, 9],\n      UNKN,\n      __init = [],\n      initialized = false;\n\n  // Взято из https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n  function deepFreeze(obj) {\n    if (!('freeze' in Object)) {\n      return;\n    }\n\n    var propNames = Object.getOwnPropertyNames(obj);\n    propNames.forEach(function(name) {\n      var prop = obj[name];\n\n      if (typeof prop === 'object' && prop !== null)\n        deepFreeze(prop);\n    });\n\n    return Object.freeze(obj);\n  }\n\n  /**\n   * Тег. Содержит в себе информацию о конкретной форме слова, но при этом\n   * к конкретному слову не привязан. Всевозможные значения тегов переиспользуются\n   * для всех разборов слов.\n   *\n   * Все граммемы навешаны на тег как поля. Если какая-то граммема содержит в себе\n   * дочерние граммемы, то значением поля является именно название дочерней\n   * граммемы (например, tag.GNdr === 'masc'). В то же время для дочерних граммем\n   * значением является просто true (т.е. условие можно писать и просто как\n   * if (tag.masc) ...).\n   *\n   * @property {string[]} stat Полный список неизменяемых граммем.\n   * @property {string[]} flex Полный список изменяемых граммем.\n   * @property {Tag} ext Копия тега с русскими обозначениями (по версии OpenCorpora).\n   */\n  var Tag = function(str) {\n    var par, pair = str.split(' ');\n    this.stat = pair[0].split(',');\n    this.flex = pair[1] ? pair[1].split(',') : [];\n    for (var j = 0; j < 2; j++) {\n      var grams = this[['stat', 'flex'][j]];\n      for (var i = 0; i < grams.length; i++) {\n        var gram = grams[i];\n        this[gram] = true;\n        // loc2 -> loct -> CAse\n        while (grammemes[gram] && (par = grammemes[gram].parent)) {\n          this[par] = gram;\n          gram = par;\n        }\n      }\n    }\n    if ('POST' in this) {\n      this.POS = this.POST;\n    }\n  }\n\n  /**\n   * Возвращает текстовое представление тега.\n   *\n   * @returns {string} Список неизменяемых граммем через запятую, пробел,\n   *  и список изменяемых граммем через запятую.\n   */\n  Tag.prototype.toString = function() {\n    return (this.stat.join(',') + ' ' + this.flex.join(',')).trim();\n  }\n\n  /**\n   * Проверяет согласованность с конкретными значениями граммем либо со списком\n   * граммем из другого тега (или слова).\n   *\n   * @param {Tag|Parse} [tag] Тег или разбор слова, с которым следует\n   *  проверить согласованность.\n   * @param {Array|Object} grammemes Граммемы, по которым нужно проверить\n   *  согласованность.\n   *\n   *  Если указан тег (или разбор), то grammemes должен быть массивом тех\n   *  граммем, которые у обоих тегов должны совпадать. Например:\n   *  tag.matches(otherTag, ['POS', 'GNdr'])\n   *\n   *  Если тег не указан, а указан массив граммем, то проверяется просто их\n   *  наличие. Например, аналог выражения (tag.NOUN && tag.masc):\n   *  tag.matches([ 'NOUN', 'masc' ])\n   *\n   *  Если тег не указан, а указан объект, то ключи в нем — названия граммем,\n   *  значения — дочерние граммемы, массивы граммем, либо true/false:\n   *  tag.matches({ 'POS' : 'NOUN', 'GNdr': ['masc', 'neut'] })\n   * @returns {boolean} Является ли текущий тег согласованным с указанным.\n   */\n  // TODO: научиться понимать, что некоторые граммемы можно считать эквивалентными при сравнении двух тегов (вариации падежей и т.п.)\n  Tag.prototype.matches = function(tag, grammemes) {\n    if (!grammemes) {\n      if (Object.prototype.toString.call(tag) === '[object Array]') {\n        for (var i = 0; i < tag.length; i++) {\n          if (!this[tag[i]]) {\n            return false;\n          }\n        }\n        return true;\n      } else\n      // Match to map\n      for (var k in tag) {\n        if (Object.prototype.toString.call(tag[k]) === '[object Array]') {\n          if (!tag[k].indexOf(this[k])) {\n            return false;\n          }\n        } else {\n          if (tag[k] !== this[k]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    if (tag instanceof Parse) {\n      tag = tag.tag;\n    }\n\n    // Match to another tag\n    for (i = 0; i < grammemes.length; i++) {\n      if (tag[grammemes[i]] !== this[grammemes[i]]) {\n        // Special case: tag.CAse\n        return false;\n      }\n    }\n    return true;\n  }\n\n  Tag.prototype.isProductive = function() {\n    return !(this.NUMR || this.NPRO || this.PRED || this.PREP ||\n      this.CONJ || this.PRCL || this.INTJ || this.Apro ||\n      this.NUMB || this.ROMN || this.LATN || this.PNCT ||\n      this.UNKN);\n  }\n\n  Tag.prototype.isCapitalized = function() {\n    return this.Name || this.Surn || this.Patr || this.Geox || this.Init;\n  }\n\n  function makeTag(tagInt, tagExt) {\n    var tag = new Tag(tagInt);\n    tag.ext = new Tag(tagExt);\n    return deepFreeze(tag);\n  }\n\n  /**\n   * Производит морфологический анализ слова. Возвращает возможные варианты\n   * разбора по убыванию их правдоподобности.\n   *\n   * @playground\n   * var Az = require('az');\n   * Az.Morph.init(function() {\n   *   console.log(Az.Morph('стали'));\n   * });\n   * @param {string} word Слово, которое следует разобрать.\n   * @param {Object} [config] Опции разбора.\n   * @param {boolean} [config.ignoreCase=False] Следует ли игнорировать\n   *  регистр слов (в основном это означает возможность написания имен собственных и\n   *  инициалов с маленькой буквы).\n   * @param {Object} [config.replacements={ 'е': 'ё' }] Допустимые замены букв\n   *  при поиске слов в словаре. Ключи объекта — заменяемые буквы в разбираемом\n   *  слове, соответствующие им значения — буквы в словарных словах, которым\n   *  допустимо встречаться вместо заменяемых. По умолчанию буква «е» может\n   *  соответствовать букве «ё» в словарных словах.\n   * @param {number} [config.stutter=Infinity] «Заикание». Устраняет повторения букв\n   *  (как с дефисом - «не-е-ет», так и без - «нееет»).\n   *\n   *  Infinity не ограничивает максимальное число повторений (суммарно во всем слове).\n   *\n   *  0 или false чтобы отключить.\n   * @param {number|'auto'} [config.typos=0] Опечатки. Максимальное количество\n   * опечаток в слове.\n   *\n   *  Опечаткой считается:\n   *  - лишняя буква в слове\n   *  - пропущенная буква в слове (TODO: самый медленный тип опечаток, стоит сделать опциональным)\n   *  - не та буква в слове (если правильная буква стоит рядом на клавиатуре)\n   *  - переставленные местами соседние буквы\n   *\n   *  0 или false чтобы отключить.\n   *\n   *  'auto':\n   *  - 0, если слово короче 5 букв\n   *  - 1, если слово короче 10 букв (но только если не нашлось варианта разбора без опечаток)\n   *  - 2 в противном случае (но только если не нашлось варианта разбора без опечаток или с 1 опечаткой)\n   * @param {string[]} [config.parsers] Список применяемых парсеров (см. поля\n   *  объекта Az.Morph.Parsers) в порядке применения (т.е. стоящие в начале\n   *  имеют наивысший приоритет).\n   *\n   *  Вопросительный знак означает, что данный парсер не терминальный, то есть\n   *  варианты собираются до первого терминального парсера. Иными словами, если\n   *  мы дошли до какого-то парсера, значит все стоящие перед ним терминальные\n   *  парсеры либо не дали результата совсем, либо дали только с опечатками.\n   *\n   *  (парсер в терминологии pymorphy2 — анализатор)\n   * @param {boolean} [config.forceParse=False] Всегда возвращать хотя бы один вариант\n   *  разбора (как это делает pymorphy2), даже если совсем ничего не получилось.\n   * @returns {Parse[]} Варианты разбора.\n   * @memberof Az\n   */\n  var Morph = function(word, config) {\n    if (!initialized) {\n      throw new Error('Please call Az.Morph.init() before using this module.');\n    }\n\n    config = config ? Az.extend(defaults, config) : defaults;\n\n    var parses = [];\n    var matched = false;\n    for (var i = 0; i < config.parsers.length; i++) {\n      var name = config.parsers[i];\n      var terminal = name[name.length - 1] !== '?';\n      name = terminal ? name : name.slice(0, -1);\n      if (name in Morph.Parsers) {\n        var vars = Morph.Parsers[name](word, config);\n        for (var j = 0; j < vars.length; j++) {\n          vars[j].parser = name;\n          if (!vars[j].stutterCnt && !vars[j].typosCnt) {\n            matched = true;\n          }\n        }\n\n        parses = parses.concat(vars);\n        if (matched && terminal) {\n          break;\n        }\n      } else {\n        console.warn('Parser \"' + name + '\" is not found. Skipping');\n      }\n    }\n\n    if (!parses.length && config.forceParse) {\n      parses.push(new Parse(word.toLocaleLowerCase(), UNKN));\n    }\n\n    var total = 0;\n    for (i = 0; i < parses.length; i++) {\n      if (parses[i].parser === 'Dictionary') {\n        var res = probabilities.findAll(parses[i] + ':' + parses[i].tag);\n        if (res && res[0]) {\n          parses[i].score = (res[0][1] / 1000000) * getDictionaryScore(parses[i].stutterCnt, parses[i].typosCnt);\n          total += parses[i].score;\n        }\n      }\n    }\n\n    // Normalize Dictionary & non-Dictionary scores separately\n    if (config.normalizeScore) {\n      if (total > 0) {\n        for (i = 0; i < parses.length; i++) {\n          if (parses[i].parser === 'Dictionary') {\n            parses[i].score /= total;\n          }\n        }\n      }\n\n      total = 0;\n      for (i = 0; i < parses.length; i++) {\n        if (parses[i].parser !== 'Dictionary') {\n          total += parses[i].score;\n        }\n      }\n      if (total > 0) {\n        for (i = 0; i < parses.length; i++) {\n          if (parses[i].parser !== 'Dictionary') {\n            parses[i].score /= total;\n          }\n        }\n      }\n    }\n\n    parses.sort(function(e1, e2) {\n      return e2.score - e1.score;\n    });\n\n    return parses;\n  }\n\n  // TODO: вынести парсеры в отдельный файл(ы)?\n\n  Morph.Parsers = {}\n\n  /**\n   * Один из возможных вариантов морфологического разбора.\n   *\n   * @property {string} word Слово в текущей форме (с исправленными ошибками,\n   *  если они были)\n   * @property {Tag} tag Тег, описывающий текущую форму слова.\n   * @property {number} score Число от 0 до 1, соответствующее «уверенности»\n   *  в данном разборе (чем оно выше, тем вероятнее данный вариант).\n   * @property {number} stutterCnt Число «заиканий», исправленных в слове.\n   * @property {number} typosCnt Число опечаток, исправленных в слове.\n   */\n  var Parse = function(word, tag, score, stutterCnt, typosCnt) {\n    this.word = word;\n    this.tag = tag;\n    this.stutterCnt = stutterCnt || 0;\n    this.typosCnt = typosCnt || 0;\n    this.score = score || 0;\n  }\n\n  /**\n   * Приводит слово к его начальной форме.\n   *\n   * @param {boolean} keepPOS Не менять часть речи при нормализации (например,\n   *  не делать из причастия инфинитив).\n   * @returns {Parse} Разбор, соответствующий начальной форме или False,\n   *  если произвести нормализацию не удалось.\n   */\n  // TODO: некоторые смены частей речи, возможно, стоит делать в любом случае (т.к., например, компаративы, краткие формы причастий и прилагательных разделены, инфинитив отделен от глагола)\n  Parse.prototype.normalize = function(keepPOS) {\n    return this.inflect(keepPOS ? { POS: this.tag.POS } : 0);\n  }\n\n  /**\n   * Приводит слово к указанной форме.\n   *\n   * @param {Tag|Parse} [tag] Тег или другой разбор слова, с которым следует\n   *  согласовать данный.\n   * @param {Array|Object} grammemes Граммемы, по которым нужно согласовать слово.\n   * @returns {Parse|False} Разбор, соответствующий указанной форме или False,\n   *  если произвести согласование не удалось.\n   * @see Tag.matches\n   */\n  Parse.prototype.inflect = function(tag, grammemes) {\n    return this;\n  }\n\n  /**\n   * Приводит слово к форме, согласующейся с указанным числом.\n   * Вместо конкретного числа можно указать категорию (согласно http://www.unicode.org/cldr/charts/29/supplemental/language_plural_rules.html).\n   *\n   * @param {number|string} number Число, с которым нужно согласовать данное слово или категория, описывающая правило построения множественного числа.\n   * @returns {Parse|False} Разбор, соответствующий указанному числу или False,\n   *  если произвести согласование не удалось.\n   */\n  Parse.prototype.pluralize = function(number) {\n    if (!this.tag.NOUN && !this.tag.ADJF && !this.tag.PRTF) {\n      return this;\n    }\n\n    if (typeof number === 'number') {\n      number = number % 100;\n      if ((number % 10 === 0) || (number % 10 > 4) || (number > 4 && number < 21)) {\n        number = 'many';\n      } else\n      if (number % 10 === 1) {\n        number = 'one';\n      } else {\n        number = 'few';\n      }\n    }\n\n    if (this.tag.NOUN && !this.tag.nomn && !this.tag.accs) {\n      return this.inflect([number === 'one' ? 'sing' : 'plur', this.tag.CAse]);\n    } else\n    if (number === 'one') {\n      return this.inflect(['sing', this.tag.nomn ? 'nomn' : 'accs'])\n    } else\n    if (this.tag.NOUN && (number === 'few')) {\n      return this.inflect(['sing', 'gent']);\n    } else\n    if ((this.tag.ADJF || this.tag.PRTF) && this.tag.femn && (number === 'few')) {\n      return this.inflect(['plur', 'nomn']);\n    } else {\n      return this.inflect(['plur', 'gent']);\n    }\n  }\n\n  /**\n   * Проверяет, согласуется ли текущая форма слова с указанной.\n   *\n   * @param {Tag|Parse} [tag] Тег или другой разбор слова, с которым следует\n   *  проверить согласованность.\n   * @param {Array|Object} grammemes Граммемы, по которым нужно проверить\n   *  согласованность.\n   * @returns {boolean} Является ли текущая форма слова согласованной с указанной.\n   * @see Tag.matches\n   */\n  Parse.prototype.matches = function(tag, grammemes) {\n    return this.tag.matches(tag, grammemes);\n  }\n\n  /**\n   * Возвращает текущую форму слова.\n   *\n   * @returns {String} Текущая форма слова.\n   */\n  Parse.prototype.toString = function() {\n    return this.word;\n  }\n\n  // Выводит информацию о слове в консоль.\n  Parse.prototype.log = function() {\n    console.group(this.toString());\n    console.log('Stutter?', this.stutterCnt, 'Typos?', this.typosCnt);\n    console.log(this.tag.ext.toString());\n    console.groupEnd();\n  }\n\n  function lookup(dawg, word, config) {\n    var entries;\n    if (config.typos === 'auto') {\n      entries = dawg.findAll(word, config.replacements, config.stutter, 0);\n      for (var i = 0; i < autoTypos.length && !entries.length && word.length > autoTypos[i]; i++) {\n        entries = dawg.findAll(word, config.replacements, config.stutter, i + 1);\n      }\n    } else {\n      entries = dawg.findAll(word, config.replacements, config.stutter, config.typos);\n    }\n    return entries;\n  }\n\n  function getDictionaryScore(stutterCnt, typosCnt) {\n    // = 1.0 if no stutter/typos\n    // = 0.3 if any number of stutter or 1 typo\n    // = 0.09 if 2 typos\n    // = 0.027 if 3 typos\n    return Math.pow(0.3, Math.min(stutterCnt, 1) + typosCnt);\n  }\n\n  var DictionaryParse = function(word, paradigmIdx, formIdx, stutterCnt, typosCnt, prefix, suffix) {\n    this.word = word;\n    this.paradigmIdx = paradigmIdx;\n    this.paradigm = paradigms[paradigmIdx];\n    this.formIdx = formIdx;\n    this.formCnt = this.paradigm.length / 3;\n    this.tag = tags[this.paradigm[this.formCnt + formIdx]];\n    this.stutterCnt = stutterCnt || 0;\n    this.typosCnt = typosCnt || 0;\n    this.score = getDictionaryScore(this.stutterCnt, this.typosCnt);\n    this.prefix = prefix || '';\n    this.suffix = suffix || '';\n  }\n\n  DictionaryParse.prototype = Object.create(Parse.prototype);\n  DictionaryParse.prototype.constructor = DictionaryParse;\n\n  // Возвращает основу слова\n  DictionaryParse.prototype.base = function() {\n    if (this._base) {\n      return this._base;\n    }\n    return (this._base = this.word.substring(\n      prefixes[this.paradigm[(this.formCnt << 1) + this.formIdx]].length,\n      this.word.length - suffixes[this.paradigm[this.formIdx]].length)\n    );\n  }\n\n  // Склоняет/спрягает слово так, чтобы оно соответствовало граммемам другого слова, тега или просто конкретным граммемам (подробнее см. Tag.prototype.matches).\n  // Всегда выбирается первый подходящий вариант.\n  DictionaryParse.prototype.inflect = function(tag, grammemes) {\n    if (!grammemes && typeof tag === 'number') {\n      // Inflect to specific formIdx\n      return new DictionaryParse(\n          prefixes[this.paradigm[(this.formCnt << 1) + tag]] +\n          this.base() +\n          suffixes[this.paradigm[tag]],\n        this.paradigmIdx,\n        tag, 0, 0, this.prefix, this.suffix\n      );\n    }\n\n    for (var formIdx = 0; formIdx < this.formCnt; formIdx++) {\n      if (tags[this.paradigm[this.formCnt + formIdx]].matches(tag, grammemes)) {\n        return new DictionaryParse(\n            prefixes[this.paradigm[(this.formCnt << 1) + formIdx]] +\n            this.base() +\n            suffixes[this.paradigm[formIdx]],\n          this.paradigmIdx,\n          formIdx, 0, 0, this.prefix, this.suffix\n        );\n      }\n    }\n\n    return false;\n  }\n\n  DictionaryParse.prototype.log = function() {\n    console.group(this.toString());\n    console.log('Stutter?', this.stutterCnt, 'Typos?', this.typosCnt);\n    console.log(prefixes[this.paradigm[(this.formCnt << 1) + this.formIdx]] + '|' + this.base() + '|' + suffixes[this.paradigm[this.formIdx]]);\n    console.log(this.tag.ext.toString());\n    var norm = this.normalize();\n    console.log('=> ', norm + ' (' + norm.tag.ext.toString() + ')');\n    norm = this.normalize(true);\n    console.log('=> ', norm + ' (' + norm.tag.ext.toString() + ')');\n    console.groupCollapsed('Все формы: ' + this.formCnt);\n    for (var formIdx = 0; formIdx < this.formCnt; formIdx++) {\n      var form = this.inflect(formIdx);\n      console.log(form + ' (' + form.tag.ext.toString() + ')');\n    }\n    console.groupEnd();\n    console.groupEnd();\n  }\n\n  DictionaryParse.prototype.toString = function() {\n    if (this.prefix) {\n      var pref = prefixes[this.paradigm[(this.formCnt << 1) + this.formIdx]];\n      return pref + this.prefix + this.word.substr(pref.length) + this.suffix;\n    } else {\n      return this.word + this.suffix;\n    }\n  }\n\n  var CombinedParse = function(left, right) {\n    this.left = left;\n    this.right = right;\n    this.tag = right.tag;\n    this.score = left.score * right.score * 0.8;\n    this.stutterCnt = left.stutterCnt + right.stutterCnt;\n    this.typosCnt = left.typosCnt + right.typosCnt;\n    if ('formCnt' in right) {\n      this.formCnt = right.formCnt;\n    }\n  }\n\n  CombinedParse.prototype = Object.create(Parse.prototype);\n  CombinedParse.prototype.constructor = CombinedParse;\n\n  CombinedParse.prototype.inflect = function(tag, grammemes) {\n    var left, right;\n\n    right = this.right.inflect(tag, grammemes);\n    if (!grammemes && typeof tag === 'number') {\n      left = this.left.inflect(right.tag, ['POST', 'NMbr', 'CAse', 'PErs', 'TEns']);\n    } else {\n      left = this.left.inflect(tag, grammemes);\n    }\n    if (left && right) {\n      return new CombinedParse(left, right);\n    } else {\n      return false;\n    }\n  }\n\n  CombinedParse.prototype.toString = function() {\n    return this.left.word + '-' + this.right.word;\n  }\n\n  __init.push(function() {\n    Morph.Parsers.Dictionary = function(word, config) {\n      var isCapitalized =\n        !config.ignoreCase && word.length &&\n        (word[0].toLocaleLowerCase() !== word[0]) &&\n        (word.substr(1).toLocaleUpperCase() !== word.substr(1));\n      word = word.toLocaleLowerCase();\n\n      var opts = lookup(words, word, config);\n\n      var vars = [];\n      for (var i = 0; i < opts.length; i++) {\n        for (var j = 0; j < opts[i][1].length; j++) {\n          var w = new DictionaryParse(\n            opts[i][0],\n            opts[i][1][j][0],\n            opts[i][1][j][1],\n            opts[i][2],\n            opts[i][3]);\n          if (config.ignoreCase || !w.tag.isCapitalized() || isCapitalized) {\n            vars.push(w);\n          }\n        }\n      }\n      return vars;\n    }\n\n    var abbrTags = [];\n    for (var i = 0; i <= 2; i++) {\n      for (var j = 0; j <= 5; j++) {\n        for (var k = 0; k <= 1; k++) {\n          abbrTags.push(makeTag(\n            'NOUN,inan,' + ['masc', 'femn', 'neut'][i] + ',Fixd,Abbr ' + ['sing', 'plur'][k] + ',' + ['nomn', 'gent', 'datv', 'accs', 'ablt', 'loct'][j],\n            'СУЩ,неод,' + ['мр', 'жр', 'ср'][i] + ',0,аббр ' + ['ед', 'мн'][k] + ',' + ['им', 'рд', 'дт', 'вн', 'тв', 'пр'][j]\n          ));\n        }\n      }\n    }\n\n    // Произвольные аббревиатуры (несклоняемые)\n    // ВК, ЖК, ССМО, ОАО, ЛенСпецСМУ\n    Morph.Parsers.Abbr = function(word, config) {\n      // Однобуквенные считаются инициалами и для них заведены отдельные парсеры\n      if (word.length < 2) {\n        return [];\n      }\n      // Дефисов в аббревиатуре быть не должно\n      if (word.indexOf('-') > -1) {\n        return [];\n      }\n      // Первая буква должна быть заглавной: сокращения с маленькой буквы (типа iOS) мало распространены\n      // Последняя буква должна быть заглавной: иначе сокращение, вероятно, склоняется\n      if ((initials.indexOf(word[0]) > -1) && (initials.indexOf(word[word.length - 1]) > -1)) {\n        var caps = 0;\n        for (var i = 0; i < word.length; i++) {\n          if (initials.indexOf(word[i]) > -1) {\n            caps++;\n          }\n        }\n        if (caps <= 5) {\n          var vars = [];\n          for (i = 0; i < abbrTags.length; i++) {\n            var w = new Parse(word, abbrTags[i], 0.5);\n            vars.push(w);\n          }\n          return vars;\n        }\n      }\n      // При игнорировании регистра разбираем только короткие аббревиатуры\n      // (и требуем, чтобы каждая буква была «инициалом», т.е. без мягких/твердых знаков)\n      if (!config.ignoreCase || (word.length > 5)) {\n        return [];\n      }\n      word = word.toLocaleUpperCase();\n      for (i = 0; i < word.length; i++) {\n        if (initials.indexOf(word[i]) === -1) {\n          return [];\n        }\n      }\n      vars = [];\n      for (i = 0; i < abbrTags.length; i++) {\n        w = new Parse(word, abbrTags[i], 0.2);\n        vars.push(w);\n      }\n      return vars;\n    }\n\n    var InitialsParser = function(isPatronymic, score) {\n      var initialsTags = [];\n      for (var i = 0; i <= 1; i++) {\n        for (var j = 0; j <= 5; j++) {\n          initialsTags.push(makeTag(\n            'NOUN,anim,' + ['masc', 'femn'][i] + ',Sgtm,Name,Fixd,Abbr,Init sing,' + ['nomn', 'gent', 'datv', 'accs', 'ablt', 'loct'][j],\n            'СУЩ,од,' + ['мр', 'жр'][i] + ',sg,имя,0,аббр,иниц ед,' + ['им', 'рд', 'дт', 'вн', 'тв', 'пр'][j]\n          ));\n        }\n      }\n      return function(word, config) {\n        if (word.length !== 1) {\n          return [];\n        }\n        if (config.ignoreCase) {\n          word = word.toLocaleUpperCase();\n        }\n        if (initials.indexOf(word) === -1) {\n          return [];\n        }\n        var vars = [];\n        for (var i = 0; i < initialsTags.length; i++) {\n          var w = new Parse(word, initialsTags[i], score);\n          vars.push(w);\n        }\n        return vars;\n      }\n    }\n\n    Morph.Parsers.AbbrName = InitialsParser(false, 0.1);\n    Morph.Parsers.AbbrPatronymic = InitialsParser(true, 0.1);\n\n    var RegexpParser = function(regexp, tag, score) {\n      return function(word, config) {\n        if (config.ignoreCase) {\n          word = word.toLocaleUpperCase();\n        }\n        if (word.length && word.match(regexp)) {\n          return [new Parse(word, tag)];\n        } else {\n          return [];\n        }\n      }\n    }\n\n    grammemes['NUMB'] = grammemes['ЧИСЛО'] =\n    grammemes['ROMN'] = grammemes['РИМ'] =\n    grammemes['LATN'] = grammemes['ЛАТ'] =\n    grammemes['PNCT'] = grammemes['ЗПР'] =\n    grammemes['UNKN'] = grammemes['НЕИЗВ'] =\n     { parent: 'POST' };\n\n    Morph.Parsers.IntNumber = RegexpParser(\n      /^[−-]?[0-9]+$/,\n      makeTag('NUMB,intg', 'ЧИСЛО,цел'), 0.9);\n\n    Morph.Parsers.RealNumber = RegexpParser(\n      /^[−-]?([0-9]*[.,][0-9]+)$/,\n      makeTag('NUMB,real', 'ЧИСЛО,вещ'), 0.9);\n\n    Morph.Parsers.Punctuation = RegexpParser(\n      /^[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,\\-.\\/:;<=>?@\\[\\]^_`{|}~]+$/,\n      makeTag('PNCT', 'ЗПР'), 0.9);\n\n    Morph.Parsers.RomanNumber = RegexpParser(\n      /^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/,\n      makeTag('ROMN', 'РИМ'), 0.9);\n\n    Morph.Parsers.Latin = RegexpParser(\n      /[A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00f6\\u00f8-\\u024f]$/,\n      makeTag('LATN', 'ЛАТ'), 0.9);\n\n    // слово + частица\n    // смотри-ка\n    Morph.Parsers.HyphenParticle = function(word, config) {\n      word = word.toLocaleLowerCase();\n\n      var vars = [];\n      for (var k = 0; k < particles.length; k++) {\n        if (word.substr(word.length - particles[k].length) === particles[k]) {\n          var base = word.slice(0, -particles[k].length);\n          var opts = lookup(words, base, config);\n\n          //console.log(opts);\n          for (var i = 0; i < opts.length; i++) {\n            for (var j = 0; j < opts[i][1].length; j++) {\n              var w = new DictionaryParse(\n                opts[i][0],\n                opts[i][1][j][0],\n                opts[i][1][j][1],\n                opts[i][2],\n                opts[i][3],\n                '', particles[k]);\n              w.score *= 0.9;\n              vars.push(w);\n            }\n          }\n        }\n      }\n\n      return vars;\n    }\n\n    var ADVB = makeTag('ADVB', 'Н');\n\n    // 'по-' + прилагательное в дательном падеже\n    // по-западному\n    Morph.Parsers.HyphenAdverb = function(word, config) {\n      word = word.toLocaleLowerCase();\n\n      if ((word.length < 5) || (word.substr(0, 3) !== 'по-')) {\n        return [];\n      }\n\n      var opts = lookup(words, word.substr(3), config);\n\n      var parses = [];\n      var used = {};\n\n      for (var i = 0; i < opts.length; i++) {\n        if (!used[opts[i][0]]) {\n          for (var j = 0; j < opts[i][1].length; j++) {\n            var parse = new DictionaryParse(opts[i][0], opts[i][1][j][0], opts[i][1][j][1], opts[i][2], opts[i][3]);\n            if (parse.matches(['ADJF', 'sing', 'datv'])) {\n              used[opts[i][0]] = true;\n\n              parse = new Parse('по-' + opts[i][0], ADVB, parse.score * 0.9, opts[i][2], opts[i][3]);\n              parses.push(parse);\n              break;\n            }\n          }\n        }\n      }\n      return parses;\n    }\n\n    // слово + '-' + слово\n    // интернет-магазин\n    // компания-производитель\n    Morph.Parsers.HyphenWords = function(word, config) {\n      word = word.toLocaleLowerCase();\n      for (var i = 0; i < knownPrefixes.length; i++) {\n        if (knownPrefixes[i][knownPrefixes[i].length - 1] === '-' &&\n            word.substr(0, knownPrefixes[i].length) === knownPrefixes[i]) {\n          return [];\n        }\n      }\n      var parses = [];\n      var parts = word.split('-');\n      if (parts.length !== 2 || !parts[0].length || !parts[1].length) {\n        if (parts.length > 2) {\n          var end = parts[parts.length - 1];\n          var right = Morph.Parsers.Dictionary(end, config);\n          for (var j = 0; j < right.length; j++) {\n            if (right[j] instanceof DictionaryParse) {\n              right[j].score *= 0.2;\n              right[j].prefix = word.substr(0, word.length - end.length - 1) + '-';\n              parses.push(right[j]);\n            }\n          }\n        }\n        return parses;\n      }\n      var left = Morph.Parsers.Dictionary(parts[0], config);\n     right = Morph.Parsers.Dictionary(parts[1], config);\n\n\n      // Variable\n      for (i = 0; i < left.length; i++) {\n        if (left[i].tag.Abbr) {\n          continue;\n        }\n        for (j = 0; j < right.length; j++) {\n          if (!left[i].matches(right[j], ['POST', 'NMbr', 'CAse', 'PErs', 'TEns'])) {\n            continue;\n          }\n          if (left[i].stutterCnt + right[j].stutterCnt > config.stutter ||\n              left[i].typosCnt + right[j].typosCnt > config.typos) {\n            continue;\n          }\n          parses.push(new CombinedParse(left[i], right[j]));\n        }\n      }\n      // Fixed\n      for (j = 0; j < right.length; j++) {\n        if (right[j] instanceof DictionaryParse) {\n          right[j].score *= 0.3;\n          right[j].prefix = parts[0] + '-';\n          parses.push(right[j]);\n        }\n      }\n\n      return parses;\n    }\n\n\n    Morph.Parsers.PrefixKnown = function(word, config) {\n      var isCapitalized =\n        !config.ignoreCase && word.length &&\n        (word[0].toLocaleLowerCase() !== word[0]) &&\n        (word.substr(1).toLocaleUpperCase() !== word.substr(1));\n      word = word.toLocaleLowerCase();\n      var parses = [];\n      for (var i = 0; i < knownPrefixes.length; i++) {\n        if (word.length - knownPrefixes[i].length < 3) {\n          continue;\n        }\n\n        if (word.substr(0, knownPrefixes[i].length) === knownPrefixes[i]) {\n          var end = word.substr(knownPrefixes[i].length);\n          var right = Morph.Parsers.Dictionary(end, config);\n          for (var j = 0; j < right.length; j++) {\n            if (!right[j].tag.isProductive()) {\n              continue;\n            }\n            if (!config.ignoreCase && right[j].tag.isCapitalized() && !isCapitalized) {\n              continue;\n            }\n            right[j].score *= 0.7;\n            right[j].prefix = knownPrefixes[i];\n            parses.push(right[j]);\n          }\n        }\n      }\n      return parses;\n    }\n\n    Morph.Parsers.PrefixUnknown = function(word, config) {\n      var isCapitalized =\n        !config.ignoreCase && word.length &&\n        (word[0].toLocaleLowerCase() !== word[0]) &&\n        (word.substr(1).toLocaleUpperCase() !== word.substr(1));\n      word = word.toLocaleLowerCase();\n      var parses = [];\n      for (var len = 1; len <= 5; len++) {\n        if (word.length - len < 3) {\n          break;\n        }\n        var end = word.substr(len);\n        var right = Morph.Parsers.Dictionary(end, config);\n        for (var j = 0; j < right.length; j++) {\n          if (!right[j].tag.isProductive()) {\n            continue;\n          }\n          if (!config.ignoreCase && right[j].tag.isCapitalized() && !isCapitalized) {\n            continue;\n          }\n          right[j].score *= 0.3;\n          right[j].prefix = word.substr(0, len);\n          parses.push(right[j]);\n        }\n      }\n      return parses;\n    }\n\n    // Отличие от предсказателя по суффиксам в pymorphy2: найдя подходящий суффикс, проверяем ещё и тот, что на символ короче\n    Morph.Parsers.SuffixKnown = function(word, config) {\n      if (word.length < 4) {\n        return [];\n      }\n      var isCapitalized =\n        !config.ignoreCase && word.length &&\n        (word[0].toLocaleLowerCase() !== word[0]) &&\n        (word.substr(1).toLocaleUpperCase() !== word.substr(1));\n      word = word.toLocaleLowerCase();\n      var parses = [];\n      var minlen = 1;\n      var coeffs = [0, 0.2, 0.3, 0.4, 0.5, 0.6];\n      var used = {};\n      for (var i = 0; i < prefixes.length; i++) {\n        if (prefixes[i].length && (word.substr(0, prefixes[i].length) !== prefixes[i])) {\n          continue;\n        }\n        var base = word.substr(prefixes[i].length);\n        for (var len = 5; len >= minlen; len--) {\n          if (len >= base.length) {\n            continue;\n          }\n          var left = base.substr(0, base.length - len);\n          var right = base.substr(base.length - len);\n          var entries = predictionSuffixes[i].findAll(right, config.replacements, 0, 0);\n          if (!entries) {\n            continue;\n          }\n\n          var p = [];\n          var max = 1;\n          for (var j = 0; j < entries.length; j++) {\n            var suffix = entries[j][0];\n            var stats = entries[j][1];\n\n            for (var k = 0; k < stats.length; k++) {\n              var parse = new DictionaryParse(\n                prefixes[i] + left + suffix,\n                stats[k][1],\n                stats[k][2]);\n              // Why there is even non-productive forms in suffix DAWGs?\n              if (!parse.tag.isProductive()) {\n                continue;\n              }\n              if (!config.ignoreCase && parse.tag.isCapitalized() && !isCapitalized) {\n                continue;\n              }\n              var key = parse.toString() + ':' + stats[k][1] + ':' + stats[k][2];\n              if (key in used) {\n                continue;\n              }\n              max = Math.max(max, stats[k][0]);\n              parse.score = stats[k][0] * coeffs[len];\n              p.push(parse);\n              used[key] = true;\n            }\n          }\n          if (p.length > 0) {\n            for (j = 0; j < p.length; j++) {\n              p[j].score /= max;\n            }\n            parses = parses.concat(p);\n            // Check also suffixes 1 letter shorter\n            minlen = Math.max(len - 1, 1);\n          }\n        }\n      }\n      return parses;\n    }\n\n    UNKN = makeTag('UNKN', 'НЕИЗВ');\n  });\n\n  /**\n   * Задает опции морфологического анализатора по умолчанию.\n   *\n   * @param {Object} config Опции анализатора.\n   * @see Morph\n   */\n  Morph.setDefaults = function(config) {\n    defaults = config;\n  }\n\n  /**\n   * Инициализирует анализатор, загружая необходимые для работы словари из\n   * указанной директории. Эту функцию необходимо вызвать (и дождаться\n   * срабатывания коллбэка) до любых действий с модулем.\n   *\n   * @param {string} [path] Директория, содержащая файлы 'words.dawg',\n   * 'grammemes.json' и т.д. По умолчанию директория 'dicts' в данном модуле.\n   * @param {Function} callback Коллбэк, вызываемый после завершения загрузки\n   *  всех словарей.\n   */\n  Morph.init = function(path, callback) {\n    var loading = 0;\n    var tagsInt, tagsExt;\n    function loaded() {\n      if (!--loading) {\n        tags = Array(tagsInt.length);\n        for (var i = 0; i < tagsInt.length; i++) {\n          tags[i] = new Tag(tagsInt[i]);\n          tags[i].ext = new Tag(tagsExt[i]);\n        }\n        tags = deepFreeze(tags);\n        for (i = 0; i < __init.length; i++) {\n          __init[i]();\n        }\n        initialized = true;\n        callback && callback(null, Morph);\n      }\n    }\n\n    if (!callback && typeof path === 'function') {\n      callback = path;\n      if (typeof __dirname === 'string') {\n        path = __dirname + '/../dicts';\n      } else {\n        path = 'dicts';\n      }\n    }\n\n    loading++;\n    Az.DAWG.load(path + '/words.dawg', 'words', function(err, dawg) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      words = dawg;\n      loaded();\n    });\n\n    var outOfLoop =  function(err, dawg) {\n\t\tif (err) {\n\t\t\tcallback(err);\n\t\t\treturn;\n\t\t}\n\t\tpredictionSuffixes[prefix] = dawg;\n\t\tloaded();\n\t}\n    for (var prefix = 0; prefix < 3; prefix++) {\n\n        loading++;\n        Az.DAWG.load(path + '/prediction-suffixes-' + prefix + '.dawg', 'probs', outOfLoop);\n\n    }\n\n    loading++;\n    Az.DAWG.load(path + '/p_t_given_w.intdawg', 'int', function(err, dawg) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      probabilities = dawg;\n      loaded();\n    });\n\n    loading++;\n    Az.load(path + '/grammemes.json', 'json', function(err, json) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      grammemes = {};\n      for (var i = 0; i < json.length; i++) {\n        grammemes[json[i][0]] = grammemes[json[i][2]] = {\n          parent: json[i][1],\n          internal: json[i][0],\n          external: json[i][2],\n          externalFull: json[i][3]\n        }\n      }\n      loaded();\n    });\n\n    loading++;\n    Az.load(path + '/gramtab-opencorpora-int.json', 'json', function(err, json) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      tagsInt = json;\n      loaded();\n    });\n\n    loading++;\n    Az.load(path + '/gramtab-opencorpora-ext.json', 'json', function(err, json) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      tagsExt = json;\n      loaded();\n    });\n\n    loading++;\n    Az.load(path + '/suffixes.json', 'json', function(err, json) {\n      if (err) {\n        callback(err);\n        return;\n      }\n      suffixes = json;\n      loaded();\n    });\n\n    loading++;\n    Az.load(path + '/paradigms.array', 'arraybuffer', function(err, data) {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      var list = new Uint16Array(data),\n          count = list[0],\n          pos = 1;\n\n      paradigms = [];\n      for (var i = 0; i < count; i++) {\n        var size = list[pos++];\n        paradigms.push(list.subarray(pos, pos + size));\n        pos += size;\n      }\n      loaded();\n    });\n  }\n\n  return Morph;\n}));\n\n;(function (global, factory) {\n    (module.exports = module.exports || {}) && (module.exports.Syntax = factory(module.exports))\n}(this, function (Az) { ;\n  // TBD: Syntax analyzer\n  var Syntax = function() {\n\n  }\n\n  return Syntax;\n}));\nconst Az = this.Az;\n;(function (global, factory) {\n  (module.exports = module.exports || {}) && (module.exports.Tokens = factory(Az))\n}(this, function (Az) { ;\n  /** @namespace Az **/\n  var TLDs = 'ac|ad|ae|aero|af|ag|ai|al|am|ao|aq|ar|arpa|as|asia|at|au|aw|ax|az|ba|bb|be|bf|bg|bh|bi|biz|bj|bm|bo|br|bs|bt|bv|bw|by|bz|ca|cat|cc|cd|cf|cg|ch|ci|cl|cm|cn|co|com|coop|cr|cu|cv|cw|cx|cz|de|dj|dk|dm|do|dz|ec|edu|ee|eg|es|et|eu|fi|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gov|gp|gq|gr|gs|gt|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|info|int|io|iq|ir|is|it|je|jo|jobs|jp|kg|ki|km|kn|kp|kr|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mil|mk|ml|mn|mo|mobi|mp|mq|mr|ms|mt|mu|museum|mv|mw|mx|my|na|name|nc|ne|net|nf|ng|nl|no|nr|nu|nz|om|org|pa|pe|pf|ph|pk|pl|pm|pn|post|pr|pro|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sx|sy|sz|tc|td|tel|tf|tg|th|tj|tk|tl|tm|tn|to|tr|travel|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|yt|امارات|հայ|বাংলা|бел|中国|中國|الجزائر|مصر|ею|გე|ελ|香港|भारत|بھارت|భారత్|ભારત|ਭਾਰਤ|ভারত|இந்தியா|ایران|ايران|عراق|الاردن|한국|қаз|ලංකා|இலங்கை|المغرب|мкд|мон|澳門|澳门|مليسيا|عمان|پاکستان|پاكستان|فلسطين|срб|рф|قطر|السعودية|السعودیة|السعودیۃ|السعوديه|سودان|新加坡|சிங்கப்பூர்|سورية|سوريا|ไทย|تونس|台灣|台湾|臺灣|укр|اليمن|xxx|zm|aaa|aarp|abarth|abb|abbott|abbvie|abc|able|abogado|abudhabi|academy|accenture|accountant|accountants|aco|active|actor|adac|ads|adult|aeg|aetna|afamilycompany|afl|africa|africamagic|agakhan|agency|aig|aigo|airbus|airforce|airtel|akdn|alfaromeo|alibaba|alipay|allfinanz|allstate|ally|alsace|alstom|americanexpress|americanfamily|amex|amfam|amica|amsterdam|analytics|android|anquan|anz|aol|apartments|app|apple|aquarelle|arab|aramco|archi|army|art|arte|asda|associates|athleta|attorney|auction|audi|audible|audio|auspost|author|auto|autos|avianca|aws|axa|azure|baby|baidu|banamex|bananarepublic|band|bank|bar|barcelona|barclaycard|barclays|barefoot|bargains|baseball|basketball|bauhaus|bayern|bbc|bbt|bbva|bcg|bcn|beats|beauty|beer|bentley|berlin|best|bestbuy|bet|bharti|bible|bid|bike|bing|bingo|bio|black|blackfriday|blanco|blockbuster|blog|bloomberg|blue|bms|bmw|bnl|bnpparibas|boats|boehringer|bofa|bom|bond|boo|book|booking|boots|bosch|bostik|boston|bot|boutique|box|bradesco|bridgestone|broadway|broker|brother|brussels|budapest|bugatti|build|builders|business|buy|buzz|bzh|cab|cafe|cal|call|calvinklein|camera|camp|cancerresearch|canon|capetown|capital|capitalone|car|caravan|cards|care|career|careers|cars|cartier|casa|case|caseih|cash|casino|catering|catholic|cba|cbn|cbre|cbs|ceb|center|ceo|cern|cfa|cfd|chanel|channel|chase|chat|cheap|chintai|chloe|christmas|chrome|chrysler|church|cipriani|circle|cisco|citadel|citi|citic|city|cityeats|claims|cleaning|click|clinic|clinique|clothing|cloud|club|clubmed|coach|codes|coffee|college|cologne|comcast|commbank|community|company|compare|computer|comsec|condos|construction|consulting|contact|contractors|cooking|cookingchannel|cool|corsica|country|coupon|coupons|courses|credit|creditcard|creditunion|cricket|crown|crs|cruise|cruises|csc|cuisinella|cymru|cyou|dabur|dad|dance|date|dating|datsun|day|dclk|dds|deal|dealer|deals|degree|delivery|dell|deloitte|delta|democrat|dental|dentist|desi|design|dev|dhl|diamonds|diet|digital|direct|directory|discount|discover|dish|diy|dnp|docs|dodge|dog|doha|domains|dot|download|drive|dstv|dtv|dubai|duck|dunlop|duns|dupont|durban|dvag|dwg|earth|eat|edeka|education|email|emerck|emerson|energy|engineer|engineering|enterprises|epost|epson|equipment|ericsson|erni|esq|estate|esurance|etisalat|eurovision|eus|events|everbank|exchange|expert|exposed|express|extraspace|fage|fail|fairwinds|faith|family|fan|fans|farm|farmers|fashion|fast|fedex|feedback|ferrari|ferrero|fiat|fidelity|fido|film|final|finance|financial|fire|firestone|firmdale|fish|fishing|fit|fitness|flickr|flights|flir|florist|flowers|flsmidth|fly|foo|foodnetwork|football|ford|forex|forsale|forum|foundation|fox|free|fresenius|frl|frogans|frontdoor|frontier|ftr|fujitsu|fujixerox|fun|fund|furniture|futbol|fyi|gal|gallery|gallo|gallup|game|games|gap|garden|gbiz|gdn|gea|gent|genting|george|ggee|gift|gifts|gives|giving|glade|glass|gle|global|globo|gmail|gmbh|gmo|gmx|godaddy|gold|goldpoint|golf|goo|goodhands|goodyear|goog|google|gop|got|gotv|grainger|graphics|gratis|green|gripe|group|guardian|gucci|guge|guide|guitars|guru|hair|hamburg|hangout|haus|hbo|hdfc|hdfcbank|health|healthcare|help|helsinki|here|hermes|hgtv|hiphop|hisamitsu|hitachi|hiv|hkt|hockey|holdings|holiday|homedepot|homegoods|homes|homesense|honda|honeywell|horse|host|hosting|hot|hoteles|hotmail|house|how|hsbc|htc|hughes|hyatt|hyundai|ibm|icbc|ice|icu|ieee|ifm|iinet|ikano|imamat|imdb|immo|immobilien|industries|infiniti|ing|ink|institute|insurance|insure|intel|international|intuit|investments|ipiranga|irish|iselect|ismaili|ist|istanbul|itau|itv|iveco|iwc|jaguar|java|jcb|jcp|jeep|jetzt|jewelry|jio|jlc|jll|jmp|jnj|joburg|jot|joy|jpmorgan|jprs|juegos|juniper|kaufen|kddi|kerryhotels|kerrylogistics|kerryproperties|kfh|kia|kim|kinder|kindle|kitchen|kiwi|koeln|komatsu|kosher|kpmg|kpn|krd|kred|kuokgroup|kyknet|kyoto|lacaixa|ladbrokes|lamborghini|lamer|lancaster|lancia|lancome|land|landrover|lanxess|lasalle|lat|latino|latrobe|law|lawyer|lds|lease|leclerc|lefrak|legal|lego|lexus|lgbt|liaison|lidl|life|lifeinsurance|lifestyle|lighting|like|lilly|limited|limo|lincoln|linde|link|lipsy|live|living|lixil|loan|loans|locker|locus|loft|lol|london|lotte|lotto|love|lpl|lplfinancial|ltd|ltda|lundbeck|lupin|luxe|luxury|macys|madrid|maif|maison|makeup|man|management|mango|market|marketing|markets|marriott|marshalls|maserati|mattel|mba|mcd|mcdonalds|mckinsey|med|media|meet|melbourne|meme|memorial|men|menu|meo|metlife|miami|microsoft|mini|mint|mit|mitsubishi|mlb|mls|mma|mnet|mobily|moda|moe|moi|mom|monash|money|monster|montblanc|mopar|mormon|mortgage|moscow|moto|motorcycles|mov|movie|movistar|msd|mtn|mtpc|mtr|multichoice|mutual|mutuelle|mzansimagic|nab|nadex|nagoya|naspers|nationwide|natura|navy|nba|nec|netbank|netflix|network|neustar|new|newholland|news|next|nextdirect|nexus|nfl|ngo|nhk|nico|nike|nikon|ninja|nissan|nissay|nokia|northwesternmutual|norton|now|nowruz|nowtv|nra|nrw|ntt|nyc|obi|observer|off|office|okinawa|olayan|olayangroup|oldnavy|ollo|omega|one|ong|onl|online|onyourside|ooo|open|oracle|orange|organic|orientexpress|origins|osaka|otsuka|ott|ovh|page|pamperedchef|panasonic|panerai|paris|pars|partners|parts|party|passagens|pay|payu|pccw|pet|pfizer|pharmacy|philips|photo|photography|photos|physio|piaget|pics|pictet|pictures|pid|pin|ping|pink|pioneer|pizza|place|play|playstation|plumbing|plus|pnc|pohl|poker|politie|porn|pramerica|praxi|press|prime|prod|productions|prof|progressive|promo|properties|property|protection|pru|prudential|pub|pwc|qpon|quebec|quest|qvc|racing|raid|read|realestate|realtor|realty|recipes|red|redstone|redumbrella|rehab|reise|reisen|reit|reliance|ren|rent|rentals|repair|report|republican|rest|restaurant|review|reviews|rexroth|rich|richardli|ricoh|rightathome|ril|rio|rip|rmit|rocher|rocks|rodeo|rogers|room|rsvp|ruhr|run|rwe|ryukyu|saarland|safe|safety|sakura|sale|salon|samsclub|samsung|sandvik|sandvikcoromant|sanofi|sap|sapo|sarl|sas|save|saxo|sbi|sbs|sca|scb|schaeffler|schmidt|scholarships|school|schule|schwarz|science|scjohnson|scor|scot|seat|secure|security|seek|select|sener|services|ses|seven|sew|sex|sexy|sfr|shangrila|sharp|shaw|shell|shia|shiksha|shoes|shopping|shouji|show|showtime|shriram|silk|sina|singles|site|ski|skin|sky|skype|sling|smart|smile|sncf|soccer|social|softbank|software|sohu|solar|solutions|song|sony|soy|space|spiegel|spot|spreadbetting|srl|srt|stada|staples|star|starhub|statebank|statefarm|statoil|stc|stcgroup|stockholm|storage|store|stream|studio|study|style|sucks|supersport|supplies|supply|support|surf|surgery|suzuki|swatch|swiftcover|swiss|sydney|symantec|systems|tab|taipei|talk|taobao|target|tatamotors|tatar|tattoo|tax|taxi|tci|tdk|team|tech|technology|telecity|telefonica|temasek|tennis|teva|thd|theater|theatre|theguardian|tiaa|tickets|tienda|tiffany|tips|tires|tirol|tjmaxx|tjx|tkmaxx|tmall|today|tokyo|tools|top|toray|toshiba|total|tours|town|toyota|toys|trade|trading|training|travelchannel|travelers|travelersinsurance|trust|trv|tube|tui|tunes|tushu|tvs|ubank|ubs|uconnect|unicom|university|uno|uol|ups|vacations|vana|vanguard|vegas|ventures|verisign|versicherung|vet|viajes|video|vig|viking|villas|vin|vip|virgin|visa|vision|vista|vistaprint|viva|vivo|vlaanderen|vodka|volkswagen|volvo|vote|voting|voto|voyage|vuelos|wales|walmart|walter|wang|wanggou|warman|watch|watches|weather|weatherchannel|webcam|weber|website|wed|wedding|weibo|weir|whoswho|wien|wiki|williamhill|win|windows|wine|winners|wme|wolterskluwer|woodside|work|works|world|wow|wtc|wtf|xbox|xerox|xfinity|xihuan|xin|कॉम|セール|佛山|慈善|集团|在线|大众汽车|点看|คอม|八卦|موقع|一号店|公益|公司|香格里拉|网站|移动|我爱你|москва|католик|онлайн|сайт|联通|קום|时尚|微博|淡马锡|ファッション|орг|नेट|ストア|삼성|商标|商店|商城|дети|ポイント|新闻|工行|家電|كوم|中文网|中信|娱乐|谷歌|電訊盈科|购物|クラウド|通販|网店|संगठन|餐厅|网络|ком|诺基亚|食品|飞利浦|手表|手机|ارامكو|العليان|اتصالات|بازار|موبايلي|ابوظبي|كاثوليك|همراه|닷컴|政府|شبكة|بيتك|عرب|机构|组织机构|健康|рус|珠宝|大拿|みんな|グーグル|世界|書籍|网址|닷넷|コム|天主教|游戏|vermögensberater|vermögensberatung|企业|信息|嘉里大酒店|嘉里|广东|政务|xperia|xyz|yachts|yahoo|yamaxun|yandex|yodobashi|yoga|yokohama|you|youtube|yun|zappos|zara|zero|zip|zippo|zone|zuerich'.split('|');\n  var defaults = {\n    html: false,\n    wiki: false,       // TODO: check all cases\n    markdown: false,   // TODO: check all cases\n    hashtags: true,\n    mentions: true,\n    emails: true,\n    links: {\n      protocols: true,\n      www: false,\n      tlds: {}\n    }\n  };\n  /* TODO: add more named HTML entities */\n  var HTML_ENTITIES = { nbsp: ' ', quot: '\"', gt: '>', lt: '<', amp: '&', ndash: '–' };\n\n  for (var i = 0; i < TLDs.length; i++) {\n    defaults.links.tlds[TLDs[i]] = true;\n  }\n\n  /**\n   * Токен, соответствующий некоторой подстроке в представленном на вход тексте.\n   *\n   * @constructor\n   * @property {string} type Тип токена.\n   * @property {string} subType Подтип токена.\n   * @property {number} st Индекс первого символа, входящего в токен.\n   * @property {number} en Индекс последнего символа, входящего в токен.\n   * @property {number} length Длина токена.\n   * @property {boolean} firstUpper True, если первый символ токена является заглавной буквой.\n   * @property {boolean} allUpper True, если все символы в токене являются заглавными буквами.\n   */\n  var Token = function(source, st, length, index, firstUpper, allUpper, type, subType) {\n    this.source = source;\n    this.st = st;\n    this.length = length;\n    this.index = index;\n    this.firstUpper = firstUpper;\n    this.allUpper = allUpper;\n    this.type = type;\n    if (subType) {\n      this.subType = subType;\n    }\n  }\n  Token.prototype.toString = function() {\n    return (('_str' in this) && (this._str.length === this.length)) ? this._str : (this._str = this.source.substr(this.st, this.length));\n  }\n  Token.prototype.indexOf = function(str) {\n    if (str.length === 1) {\n      for (var i = 0; i < this.length; i++) {\n        if (this.source[this.st + i] === str) {\n          return i;\n        }\n      }\n      return -1;\n    }\n    return this.toString().indexOf(str);\n  }\n  Token.prototype.toLowerCase = function() {\n    return this.toString().toLocaleLowerCase();\n  }\n  Token.prototype.isCapitalized = function() {\n    return this.firstUpper && !this.allUpper;\n  }\n  Token.prototype.en = function() {\n    return this.st + this.length - 1;\n  }\n\n  /**\n   * Создает токенизатор текста с заданными опциями.\n   *\n   * @playground\n   * var Az = require('az');\n   * var tokens = Az.Tokens('Текст (от лат. textus — «ткань; сплетение, связь, паутина, сочетание») — зафиксированная на каком-либо материальном носителе человеческая мысль; в общем плане связная и полная последовательность символов.');\n   * tokens.done();\n   * @constructor\n   * @param {string} [text] Строка для разбивки на токены.\n   * @param {Object} [config] Опции, применяемые при разбивке.\n   * @param {boolean} [config.html=False] Распознавать и выделять в отдельные\n   *  токены (типа TAG) HTML-теги. Кроме того, содержимое тегов &lt;style&gt;\n   *  и &lt;script&gt; будет размечено как единый токен типа CONTENT.\n   * @param {boolean} [config.wiki=False] Распознавать и выделять в отдельные\n   *  токены элементы вики-разметки.\n   * @param {boolean} [config.markdown=False] Распознавать и выделять в отдельные\n   *  токены элементы Markdown-разметки.\n   * @param {boolean} [config.hashtags=True] Распознавать и выделять в отдельные\n   *  токены хэштеги (строки, начинающиеся с символа «#»).\n   * @param {boolean} [config.mentions=True] Распознавать и выделять в отдельные\n   *  токены упоминания (строки, начинающиеся с символа «@»).\n   * @param {boolean} [config.emails=True] Распознавать и выделять в отдельные\n   *  токены е-мейлы (нет, распознавание всех корректных по RFC адресов не\n   *  гарантируется).\n   * @param {Object} [config.links] Настройки распознавания ссылок. False, чтобы\n   *  не распознавать ссылки совсем.\n   * @param {boolean} [config.links.protocols=True] Распознавать и выделять в отдельные\n   *  токены ссылки с указанным протоколом (http://, https:// и вообще любым другим).\n   * @param {boolean} [config.links.www=False] Распознавать и выделять в отдельные\n   *  токены ссылки, начинающиеся с «www.».\n   * @param {Object} [config.links.tlds] Объект, в котором ключами должны быть\n   *  домены верхнего уровня, в которых будут распознаваться ссылки. По умолчанию\n   *  текущий список всех таких доменов.\n   * @memberof Az\n   */\n  var Tokens = function(text, config) {\n    if (this instanceof Tokens) {\n      this.tokens = [];\n      this.source = '';\n      if (typeof text === 'string') {\n        this.config = config ? Az.extend(defaults, config) : defaults;\n        this.append(text);\n      } else {\n        this.config = text ? Az.extend(defaults, text) : defaults;\n      }\n      this.index = -1;\n    } else {\n      return new Tokens(text, config);\n    }\n  }\n\n  Tokens.WORD = 'WORD'\n  Tokens.NUMBER = 'NUMBER'\n  Tokens.OTHER = 'OTHER'\n  Tokens.DIGIT = 'DIGIT'\n  Tokens.CYRIL = 'CYRIL'\n  Tokens.LATIN = 'LATIN'\n  Tokens.MIXED = 'MIXED'\n  Tokens.PUNCT = 'PUNCT'\n  Tokens.SPACE = 'SPACE'\n  Tokens.MARKUP = 'MARKUP'\n  Tokens.NEWLINE = 'NEWLINE'\n  Tokens.EMAIL = 'EMAIL'\n  Tokens.LINK = 'LINK'\n  Tokens.HASHTAG = 'HASHTAG'\n  Tokens.MENTION = 'MENTION'\n  Tokens.TAG = 'TAG'\n  Tokens.CONTENT = 'CONTENT'\n  Tokens.SCRIPT = 'SCRIPT'\n  Tokens.STYLE = 'STYLE'\n  Tokens.COMMENT = 'COMMENT'\n  Tokens.CLOSING = 'CLOSING'\n  Tokens.TEMPLATE = 'TEMPLATE'\n  Tokens.RANGE = 'RANGE'\n  Tokens.ENTITY = 'ENTITY'\n\n  /**\n   * Отправляет ещё один кусок текста на токенизацию. Таким образом вполне\n   * допустимо обрабатывать большие документы частями, многократно вызывая этот\n   * метод. При этом токен может начаться в одной части и продолжиться в\n   * следующей (а закончиться в ещё одной).\n   *\n   * @param {string} text Строка для разбивки на токены.\n   * @param {Object} [config] Опции, применяемые при разбивке. Перекрывают\n   *  опции, заданные в конструкторе токенизатора.\n   * @see Tokens\n   */\n  Tokens.prototype.append = function(text, config) {\n    ;\n    // Для производительности:\n    // - как можно меньше операций конкатенции/разбивки строк\n    // - вместо сравнения всего токена, проверяем соответствующий ему символ в исходной строке\n    // - типы токенов - константы в Tokens, формально это строки, но сравниваем через === (как объекты)\n    config = config ? Az.extend(this.config, config) : this.config;\n    if (config.links && (config.links.tlds === true)) {\n      config.links.tlds = defaults.links.tlds;\n    }\n\n    var offs = this.source.length;\n    this.source += text;\n\n    var s = this.source, ts = this.tokens;\n    for (var i = offs; i < s.length; i++) {\n      var ch = s[i];\n      var code = s.charCodeAt(i);\n\n      var append = false;\n      var last = ts.length - 1;\n      var token = ts[last];\n      var st = i;\n\n      if (config.html && (ch === ';')) {\n        // &nbsp;\n        if ((last > 0) &&\n            (token.type === Tokens.WORD) &&\n            (ts[last - 1].length === 1) &&\n            (s[ts[last - 1].st] === '&')) {\n          var name = token.toLowerCase();\n          if (name in HTML_ENTITIES) {\n            ch = HTML_ENTITIES[name];\n            code = ch.charCodeAt(0);\n\n            last -= 2;\n            token = ts[last];\n            ts.length = last + 1;\n          }\n        } else\n        // &x123AF5;\n        // &1234;\n        if ((last > 1) &&\n            ((token.type === Tokens.NUMBER) ||\n             ((token.type === Tokens.WORD) &&\n              (s[token.st] === 'x'))) &&\n            (ts[last - 1].length === 1) &&\n            (s[ts[last - 1].st] === '#') &&\n            (ts[last - 1].length === 1) &&\n            (s[ts[last - 1].st] === '&')) {\n          if (s[token.st] === 'x') {\n            code = parseInt(token.toString().substr(1), 16);\n          } else {\n            code = parseInt(token.toString(), 10);\n          }\n          ch = String.fromCharCode(code);\n\n          last -= 3;\n          token = ts[last];\n          ts.length = last + 1;\n        }\n      }\n\n      var charType = Tokens.OTHER;\n      var charUpper = (ch.toLocaleLowerCase() !== ch);\n      if (code >= 0x0400 && code <= 0x04FF) charType = Tokens.CYRIL;\n      if ((code >= 0x0041 && code <= 0x005A) || (code >= 0x0061 && code <= 0x007A) || (code >= 0x00C0 && code <= 0x024F)) charType = Tokens.LATIN;\n      if (code >= 0x0030 && code <= 0x0039) charType = Tokens.DIGIT;\n      if ((code <= 0x0020) || (code >= 0x0080 && code <= 0x00A0)) charType = Tokens.SPACE;\n      if ('‐-−‒–—―.…,:;?!¿¡()[]«»\"\\'’‘’“”/⁄'.indexOf(ch) > -1) charType = Tokens.PUNCT;\n\n      var tokenType = charType;\n      var tokenSubType = false;\n      if (charType === Tokens.CYRIL || charType === Tokens.LATIN) {\n        tokenType = Tokens.WORD;\n        tokenSubType = charType;\n      } else\n      if (charType === Tokens.DIGIT) {\n        tokenType = Tokens.NUMBER;\n      }\n\n      var lineStart = !token || (s[token.st + token.length - 1] === '\\n');\n\n      if (config.wiki) {\n        if (lineStart) {\n          if (':;*#~|'.indexOf(ch) > -1) {\n            tokenType = Tokens.MARKUP;\n            tokenSubType = Tokens.NEWLINE;\n          }\n        }\n        if ('={[|]}'.indexOf(ch) > -1) {\n          tokenType = Tokens.MARKUP;\n        }\n      }\n\n      if (config.markdown) {\n        if (lineStart) {\n          if ('=-#>+-'.indexOf(ch) > -1) {\n            tokenType = Tokens.MARKUP;\n            tokenSubType = Tokens.NEWLINE;\n          }\n        }\n        if ('[]*~_`\\\\'.indexOf(ch) > -1) {\n          tokenType = Tokens.MARKUP;\n        }\n      }\n\n      if (token) {\n        if (config.wiki &&\n            (ch !== \"'\") &&\n            (token.length === 1) &&\n            (s[token.st] === \"'\") &&\n            (last > 0) &&\n            (ts[last - 1].type === Tokens.WORD) &&\n            (ts[last - 1].subType === Tokens.LATIN)) {\n          ts[last - 1].length += token.length;\n\n          last -= 1;\n          ts.length = last + 1;\n          token = ts[last];\n        }\n\n        // Preprocess last token\n        if (config.links &&\n            config.links.tlds &&\n            ((charType === Tokens.PUNCT) ||\n             (charType === Tokens.SPACE)) &&\n            (ts.length > 2) &&\n            (ts[last - 2].type === Tokens.WORD) &&\n            (ts[last - 1].length === 1) &&\n            (s[ts[last - 1].st] === '.') &&\n            (ts[last].type === Tokens.WORD) &&\n            (token.toString() in config.links.tlds)) {\n\n          // Merge all subdomains\n          while ((last >= 2) &&\n                 (ts[last - 2].type === Tokens.WORD) &&\n                 (ts[last - 1].length === 1) &&\n                 ((s[ts[last - 1].st] === '.') ||\n                  (s[ts[last - 1].st] === '@') ||\n                  (s[ts[last - 1].st] === ':'))) {\n            last -= 2;\n            token = ts[last];\n            token.length += ts[last + 1].length + ts[last + 2].length;\n            token.allUpper = token.allUpper && ts[last + 1].allUpper && ts[last + 2].allUpper;\n          }\n\n          if (config.emails &&\n              (token.indexOf('@') > -1) &&\n              (token.indexOf(':') === -1)) {\n            // URL can contain a '@' but in that case it should be in form http://user@site.com or user:pass@site.com\n            // So if URL has a '@' but no ':' in it, we assume it's a email\n            token.type = Tokens.EMAIL;\n          } else {\n            token.type = Tokens.LINK;\n\n            if (ch === '/') {\n              append = true;\n            }\n          }\n          ts.length = last + 1;\n        } else\n\n        // Process next char (start new token or append to the previous one)\n        if (token.type === Tokens.LINK) {\n          if ((ch === ')') &&\n              (last >= 1) &&\n              (ts[last - 1].type === Tokens.MARKUP) &&\n              (ts[last - 1].length === 1) &&\n              (s[ts[last - 1].st] === '(')) {\n            tokenType = Tokens.MARKUP;\n          } else\n          if ((charType !== Tokens.SPACE) && (ch !== ',') && (ch !== '<')) {\n            append = true;\n          }\n        } else\n        if (token.type === Tokens.EMAIL) {\n          if ((charType === Tokens.CYRIL) || (charType === Tokens.LATIN) || (ch === '.')) {\n            append = true;\n          }\n        } else\n        if ((token.type === Tokens.HASHTAG) || (token.type === Tokens.MENTION)) {\n          if ((charType === Tokens.CYRIL) ||\n              (charType === Tokens.LATIN) ||\n              (charType === Tokens.DIGIT) ||\n              (ch === '_') || ((ch === '@') && (token.indexOf('@') === -1))) {\n            append = true;\n          }\n        } else\n        if ((token.type === Tokens.TAG) && (token.quote || (s[token.en()] !== '>'))) {\n          append = true;\n          if (token.quote) {\n            if ((ch === token.quote) && (s[token.en()] !== '\\\\')) {\n              delete token.quote;\n            }\n          } else\n          if ((ch === '\"') || (ch === \"'\")) {\n            token.quote = ch;\n          }\n        } else\n        if (token.type === Tokens.CONTENT) {\n          append = true;\n          if (token.quote) {\n            if ((ch === token.quote) && (s[token.en()] !== '\\\\')) {\n              delete token.quote;\n            }\n          } else\n          if ((ch === '\"') || (ch === \"'\")) {\n            token.quote = ch;\n          } else\n          if (ch === '>') {\n            if ((token.length >= 8) && (token.toString().substr(-8) === '</script')) {\n              token.length -= 8;\n              st -= 8;\n\n              append = false;\n              tokenType = Tokens.TAG;\n              tokenSubType = Tokens.CLOSING;\n            } else\n            if ((token.length >= 7) && (token.toString().substr(-7) === '</style')) {\n              token.length -= 7;\n              st -= 7;\n\n              append = false;\n              tokenType = Tokens.TAG;\n              tokenSubType = Tokens.CLOSING;\n            }\n          }\n        } else\n        if ((token.type === Tokens.TAG) &&\n            (token.type !== Tokens.CLOSING) &&\n            (token.length >= 8) &&\n            (token.toLowerCase().substr(1, 6) === 'script')) {\n          tokenType = Tokens.CONTENT;\n          tokenSubType = Tokens.SCRIPT;\n        } else\n        if ((token.type === Tokens.TAG) &&\n            (token.type !== Tokens.CLOSING) &&\n            (token.length >= 7) &&\n            (token.toLowerCase().substr(1, 5) === 'style')) {\n          tokenType = Tokens.CONTENT;\n          tokenSubType = Tokens.STYLE;\n        } else\n        if (config.html &&\n            (token.length === 1) &&\n            (s[token.st] === '<') &&\n            ((charType === Tokens.LATIN) || (ch === '!') || (ch === '/'))) {\n          append = true;\n          token.type = Tokens.TAG;\n          if (ch === '!') {\n            token.subType = Tokens.COMMENT;\n          } else\n          if (ch === '/') {\n            token.subType = Tokens.CLOSING;\n          }\n        } else\n        if (token.type === Tokens.CONTENT) {\n          append = true;\n        } else\n        if ((token.type === Tokens.MARKUP) &&\n            (token.subType === Tokens.TEMPLATE) &&\n            ((s[token.en()] !== '}') ||\n             (s[token.en() - 1] !== '}'))) {\n          append = true;\n        } else\n        if ((token.type === Tokens.MARKUP) &&\n            (token.type === Tokens.LINK) &&\n            (s[token.en()] !== ')')) {\n          append = true;\n        } else\n        if ((token.type === Tokens.MARKUP) &&\n            (s[token.st] === '`') &&\n            (token.subType === Tokens.NEWLINE) &&\n            (charType === Tokens.LATIN)) {\n          append = true;\n        } else\n        if ((charType === Tokens.CYRIL) || (charType === Tokens.LATIN)) {\n          if (token.type === Tokens.WORD) {\n            append = true;\n            token.subType = (token.subType === charType) ? token.subType : Tokens.MIXED;\n          } else\n          if (token.type === Tokens.NUMBER) { // Digits + ending\n            append = true;\n            token.subType = (token.subType && token.subType !== charType) ? Tokens.MIXED : charType;\n          } else\n          if (config.hashtags && (token.length === 1) && (s[token.st] === '#')) { // Hashtags\n            append = true;\n            token.type = Tokens.HASHTAG;\n          } else\n          if (config.mentions &&\n              (token.length === 1) &&\n              (s[token.st] === '@') &&\n              ((last === 0) || (ts[last - 1].type === Tokens.SPACE))) { // Mentions\n            append = true;\n            token.type = Tokens.MENTION;\n          } else\n          if ((charType === Tokens.LATIN) &&\n              (token.length === 1) &&\n              ((s[token.st] === \"'\") || (s[token.st] === '’'))) {\n            append = true;\n            token.type = Tokens.WORD;\n            token.subType = Tokens.LATIN;\n          } else\n          if ((token.length === 1) && (s[token.st] === '-')) { // -цать (?), 3-й\n            append = true;\n\n            if ((last > 0) && (ts[last - 1].type === Tokens.NUMBER)) {\n              token = ts[last - 1];\n              token.length += ts[last].length;\n\n              ts.length -= 1;\n            }\n\n            token.type = Tokens.WORD;\n            token.subType = charType;\n          }\n        } else\n        if (charType === Tokens.DIGIT) {\n          if (token.type === Tokens.WORD) {\n            append = true;\n            token.subType = Tokens.MIXED;\n          } else\n          if (token.type === Tokens.NUMBER) {\n            append = true;\n          } else\n          if ((token.length === 1) &&\n              ((s[token.st] === '+') || (s[token.st] === '-'))) {\n            append = true;\n\n            if ((last > 0) && (ts[last - 1].type === Tokens.NUMBER)) {\n              token = ts[last - 1];\n              token.length += ts[last].length;\n              token.subType = Tokens.RANGE;\n\n              ts.length -= 1;\n            }\n\n            token.type = Tokens.NUMBER;\n          } else\n          if ((token.length === 1) &&\n              ((s[token.st] === ',') || (s[token.st] === '.')) &&\n              (ts.length > 1) &&\n              (ts[last - 1].type === Tokens.NUMBER)) {\n            append = true;\n\n            token = ts[last - 1];\n            token.length += ts[last].length;\n\n            ts.length -= 1;\n          }\n        } else\n        if (charType === Tokens.SPACE) {\n          if (token.type === Tokens.SPACE) {\n            append = true;\n          }\n        } else\n        if ((token.type === Tokens.MARKUP) &&\n            (s[token.st] === ch) &&\n            ('=-~:*#`\\'>_'.indexOf(ch) > -1)) {\n          append = true;\n        } else\n        if (ch === '.') {\n          if (config.links &&\n              config.links.www &&\n              (token.length === 3) &&\n              (token.toLowerCase() === 'www')) { // Links without protocol but with www\n            append = true;\n            token.type = Tokens.LINK;\n          }\n        } else\n        if (config.wiki && (ch === \"'\") && (s[token.en()] === \"'\")) {\n          if (token.length > 1) {\n            token.length--;\n            st--;\n            tokenType = Tokens.MARKUP;\n          } else {\n            append = true;\n            token.type = Tokens.MARKUP;\n          }\n        } else\n        if ((ch === '-') ||\n            ((token.subType === Tokens.LATIN) &&\n             ((ch === '’') || (ch === \"'\")))) {\n          if (token.type === Tokens.WORD) {\n            append = true;\n          }\n        } else\n        if (ch === '/') {\n          if (config.links &&\n              config.links.protocols &&\n              (ts.length > 2) &&\n              (ts[last - 2].type === Tokens.WORD) &&\n              (ts[last - 2].subType === Tokens.LATIN) &&\n              (ts[last - 1].length === 1) &&\n              (s[ts[last - 1].st] === ':') &&\n              (ts[last].length === 1) &&\n              (s[ts[last].st] === '/')) { // Links (with protocols)\n            append = true;\n\n            token = ts[last - 2];\n            token.length += ts[last - 1].length + ts[last].length;\n            token.allUpper = token.allUpper && ts[last - 1].allUpper && ts[last].allUpper;\n            token.type = Tokens.LINK;\n\n            ts.length -= 2;\n          }\n        } else\n        if (config.html && ch === ';') {\n          if ((last > 0) &&\n              (token.type === Tokens.WORD) &&\n              (ts[last - 1].length === 1) &&\n              (s[ts[last - 1].st] === '&')) {\n            append = true;\n\n            token = ts[last - 1];\n            token.length += ts[last].length;\n            token.allUpper = token.allUpper && ts[last - 1].allUpper;\n            token.type = Tokens.ENTITY;\n\n            ts.length -= 1;\n          } else\n          if ((last > 1) &&\n              ((token.type === Tokens.WORD) ||\n               (token.type === Tokens.NUMBER)) &&\n              (ts[last - 1].length === 1) &&\n              (s[ts[last - 1].st] === '#') &&\n              (ts[last - 2].length === 1) &&\n              (s[ts[last - 2].st] === '&')) {\n            append = true;\n\n            token = ts[last - 2];\n            token.length += ts[last - 1].length + ts[last].length;\n            token.allUpper = token.allUpper && ts[last - 1].allUpper && ts[last].allUpper;\n            token.type = Tokens.ENTITY;\n\n            ts.length -= 2;\n          }\n        } else\n        if (config.markdown &&\n            (ch === '[') &&\n            (token.length === 1) &&\n            (s[token.st] === '!')) {\n          append = true;\n          token.type = Tokens.MARKUP;\n        } else\n        if (config.markdown &&\n            (ch === '(') &&\n            (token.length === 1) &&\n            (s[token.st] === ']')) {\n          tokenType = Tokens.MARKUP;\n          tokenSubType = Tokens.LINK;\n        } else\n        if (config.wiki &&\n            (ch === '{') &&\n            (token.length === 1) &&\n            (s[token.st] === '{')) {\n          append = true;\n          token.type = Tokens.MARKUP;\n          token.subType = Tokens.TEMPLATE;\n        } else\n        if (config.wiki &&\n            (ch === '[') &&\n            (token.length === 1) &&\n            (s[token.st] === '[')) {\n          append = true;\n        } else\n        if (config.wiki &&\n            (ch === ']') &&\n            (token.length === 1) &&\n            (s[token.st] === ']')) {\n          append = true;\n        } else\n        if (config.wiki && (ch === '|') && !lineStart) {\n          var found = -1;\n          for (var j = last - 1; j >= 0; j--) {\n            if ((ts[j].length === 2) &&\n                (s[ts[j].st] === '[') &&\n                (s[ts[j].st + 1] === '[')) {\n              found = j;\n              break;\n            }\n            if (((ts[j].length === 1) &&\n                 (s[ts[j].st] === '|')) ||\n                ts[j].indexOf('\\n') > -1) {\n              break;\n            }\n          }\n          if (found > -1) {\n            append = true;\n            for (j = last - 1; j >= found; j--) {\n              token = ts[j];\n              token.length += ts[j + 1].length;\n              token.allUpper = token.allUpper && ts[j + 1].allUpper;\n            }\n            last = found;\n            ts.length = last + 1;\n            token.subType = Tokens.LINK;\n          }\n        }\n      }\n\n      if (append) {\n        token.length++;\n        token.allUpper = token.allUpper && charUpper;\n      } else {\n        token = new Token(s, st, i + 1 - st, ts.length, charUpper, charUpper, tokenType, tokenSubType);\n        ts.push(token);\n      }\n    }\n    return this;\n  }\n\n  function alwaysTrue() {\n    return true;\n  }\n\n  function getMatcher(filter, exclude) {\n    if (!filter) {\n      return alwaysTrue();\n    }\n    if (typeof filter === 'function') {\n      return filter;\n    }\n    var types = filter;\n    var exclusive;\n    if ('length' in filter) {\n      exclusive = !exclude;\n      types = {};\n      for (var i = 0; i < filter.length; i++) {\n        types[filter[i]] = true;\n      }\n    } else {\n      exclusive = exclude;\n      exclude = false;\n    }\n    return function(token, index, array) {\n      if (token.subType) {\n        var sub = token.type + '.' + token.subType;\n        if (sub in types) {\n          return types[sub] !== exclude;\n        }\n      }\n      if (token.type in types) {\n        return types[token.type] !== exclude;\n      } else {\n        return !exclusive;\n      }\n    }\n  }\n\n  /**\n   * Завершает токенизацию, возвращая список токенов.\n   *\n   * Эта и другие функции принимают последними параметрами filter и флаг exclude. Они\n   * служат для фильтрации токенов (потому что часто удобнее получать не все токены, а\n   * только определенную часть из них).\n   *\n   * Если в filter передана функция, то параметр exclude игнорируется, а filter вызывается\n   * аналогично коллбэку в методе Array.prototype.filter: ей передаются параметры\n   * token, index, array (текущий токен, его индекс и общий список токенов). Будут\n   * возвращены только токены, для которых функция вернет истинное значение.\n   *\n   * Если в filter передан массив (или объект с полем length), то возвращаются токены, типы\n   * которых либо входят в этот массив (exclude=false), либо не входят в него (exclude=true).\n   * Вместо типов можно использовать строки вида 'WORD.LATIN' (тип, символ «точка» и подтип).\n   *\n   * Если в filter передать объект, то ключами в нём должны быть типы токенов, а значениями -\n   * true или false в зависимости от того, включать такие токены в ответ или нет. Как и в случае случае\n   * с массивом, в качестве ключей можно использовать строки вида 'WORD.LATIN'.\n   * Здесь параметр exclude означает, следует ли ограничить выдачу только теми типами, которые\n   * перечислены в filter.\n   * Значения с указанием подтипа имеют больший приоритет, чем просто типы. Благодаря этому можно\n   * делать такие странные вещи:\n   *\n   * ```\n   * t.done({ 'WORD': false, 'WORD.LATIN': true }, false);\n   * ```\n   * (то есть вернуть все теги, кроме тегов с типом WORD, но включить теги с подтипом LATIN)\n   *\n   * @param {Function|String[]|Object} [filter] Типы токенов, по которым нужно\n   *  отфильтровать результат (или функция для фильтрации).\n   * @param {boolean} [exclude=False] Инвертирует фильтр, т.е. возвращаются\n   *  токены со всеми типами, за исключением перечисленных в filter.\n   * @returns {Token[]} Список токенов после фильтрации.\n   */\n  Tokens.prototype.done = function(filter, exclude) {\n    // Finalize tokenizing, return list of tokens\n    // For now it just returns tokens, in the future there could be some additional work\n    if (!filter) {\n      return this.tokens;\n    }\n    var matcher = getMatcher(filter, exclude);\n    var list = [];\n    for (var i = 0; i < this.tokens.length; i++) {\n      if (matcher(this.tokens[i], i, this.tokens)) {\n        list.push(this.tokens[i]);\n      }\n    }\n    return list;\n  }\n\n  /**\n   * Подсчитывает текущее количество токенов.\n   *\n   * @param {Function|String[]|Object} [filter] См. описание метода done.\n   * @param {boolean} [exclude=False] См. описание метода done.\n   * @returns {Number} Число токенов после фильтрации.\n   */\n  Tokens.prototype.count = function(filter, exclude) {\n    if (!filter) {\n      return this.tokens.length;\n    }\n    var matcher = getMatcher(filter, exclude);\n    var count = 0;\n    for (var i = 0; i < this.tokens.length; i++) {\n      if (matcher(this.tokens[i], i, this.tokens)) {\n        count++;\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Получает следующий токен относительно текущей позиции.\n   *\n   * @param {boolean} moveIndex Следует ли переместить указатель к\n   *  следующему токену (в противном случае следующий вызов nextToken вернет\n   *  тот же результат)\n   * @param {Function|String[]|Object} [filter] См. описание метода done.\n   * @param {boolean} [exclude=False] См. описание метода done.\n   * @returns {Token|null} Следующий токен или null, если подходящих токенов\n   *  впереди нет.\n   */\n  Tokens.prototype.nextToken = function(moveIndex, filter, exclude) {\n    var matcher = getMatcher(filter, exclude);\n    var index = this.index;\n    index++;\n    while (index < this.tokens.length && matcher(this.tokens[index], index, this.tokens)) {\n      index++;\n    }\n    if (index < this.tokens.length) {\n      if (moveIndex) {\n        this.index = index;\n      }\n      return this.tokens[index];\n    }\n    return null;\n  }\n\n  /**\n   * Проверяет, является ли следующий (за исключением пробелов) токен знаком\n   * препинания или нет.\n   *\n   * @returns {Token|False} False, если следующий токен не является знаком\n   *  препинания, либо сам токен в противном случае.\n   */\n  Tokens.prototype.punctAhead = function() {\n    var token = this.nextToken(false, ['SPACE'], true);\n    return token && token.type === 'PUNCT' && token;\n  }\n\n  /**\n   * Получает предыдущий токен относительно текущей позиции.\n   *\n   * @param {boolean} moveIndex Следует ли переместить указатель к\n   *  предыдущему токену (в противном случае следующий вызов prevToken вернет\n   *  тот же результат)\n   * @param {Function|String[]|Object} [filter] См. описание метода done.\n   * @param {boolean} [exclude=False] См. описание метода done.\n   * @returns {Token|null} Предыдущий токен или null, если подходящих токенов\n   *  позади нет.\n   */\n  Tokens.prototype.prevToken = function(moveIndex, filter, exclude) {\n    var matcher = getMatcher(filter, exclude);\n    var index = this.index;\n    index--;\n    while (index >= 0 && matcher(this.tokens[index], index, this.tokens)) {\n      index--;\n    }\n    if (index >= 0) {\n      if (moveIndex) {\n        this.index = index;\n      }\n      return this.tokens[index];\n    }\n    return null;\n  }\n\n  /**\n   * Проверяет, является ли предыдущий (за исключением пробелов) токен знаком\n   * препинания или нет.\n   *\n   * @returns {Token|False} False, если предыдущий токен не является знаком\n   *  препинания, либо сам токен в противном случае.\n   */\n  Tokens.prototype.punctBehind = function() {\n    var token = this.prevToken(false, ['SPACE'], true);\n    return token && token.type === 'PUNCT' && token;\n  }\n\n  /**\n   * Проверяет, есть ли впереди текущей позиции токены, удовлетворяющие фильтру.\n   *\n   * @param {Function|String[]|Object} [filter] См. описание метода done.\n   * @param {boolean} [exclude=False] См. описание метода done.\n   * @returns {boolean} True если впереди есть хотя бы один подходящий токен,\n   *  и False в противном случае.\n   */\n  Tokens.prototype.hasTokensAhead = function(filter, exclude) {\n    return this.nextToken(false, filter, exclude) !== null;\n  }\n\n  /**\n   * Проверяет, есть ли позади текущей позиции токены, удовлетворяющие фильтру.\n   *\n   * @param {Function|String[]|Object} [filter] См. описание метода done.\n   * @param {boolean} [exclude=False] См. описание метода done.\n   * @returns {boolean} True если позади есть хотя бы один подходящий токен,\n   *  и False в противном случае.\n   */\n  Tokens.prototype.hasTokensBehind = function(filter, exclude) {\n    return this.prevToken(false, filter, exclude) !== null;\n  }\n\n  return Tokens;\n}));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\n\r\nimport './MainSectionAbout.css'\r\n\r\nexport default  () => (\r\n\r\n\t<div className={'mainAbout_container'}>\r\n\t\t<span className={\"mainAbout_title mainAbout\"}><b>Что это такое?</b></span><br/>\r\n\t\t<span className={\"mainAbout_text mainAbout\"}>Monograph - сервис, позволяющий проанализировать текст, в том числе провести частотный анализ слов и букв. Все что нужно - это загрузить текст в формате .txt в поле ниже. Это полностью бесплатно, регистрация не требуется :)\r\n\t\t\t\tТакже мы не используем куки, не храним Ваш IP-адрес, и другие данные.</span><br/>\r\n\r\n\t\t<span className={\"mainAbout_attention mainAbout\"}><b>Внимание:</b> текст перед анализом будет приведен в безличный вид (удалены окончания различных родов).\r\n\t\t\t<br/><b><u>Поддерживается только русский язык.</u></b></span>\r\n\t</div>\r\n\r\n)","import React from 'react'\r\nimport {Button} from \"rsuite\";\r\n\r\nimport './UploadToolbar.css'\r\n\r\nconst UploadToolbar = ({refs}) => {\r\n\r\n\tconst handleClickFileUpload = ()=>{ //костыль :(\r\n\t\trefs.current.click()\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t\t<Button block onClick={handleClickFileUpload} appearance={'primary'}>Зарузить файл</Button>\r\n\t)\r\n}\r\n\r\nexport default UploadToolbar;","import React, {useRef} from 'react'\r\n\r\nimport {Tag} from 'rsuite'\r\n\r\nimport UploadToolbar from './UploadToolbar'\r\nimport './Upload.css'\r\nconst UploadWrapper = ({error, onFileChange, readyToProcess }) => {\r\n\r\n\r\n\tlet file = useRef(null)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst fileChangeLocal = ()=>{\r\n\t\tonFileChange(file.current)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={'uploadWrapper'}>\r\n\r\n\r\n\r\n\t\t\t\t\t<UploadToolbar refs={file}/>\r\n\r\n\r\n\r\n\t\t\t\t\tЗагрузите текстовый файл в любом формате (<Tag>.txt</Tag>, <Tag>.ini</Tag>, <Tag>.log</Tag> и другие). Из файла будут удалены знаки препинания, окончания слов и элементы разметки.\r\n\r\n\t\t\t<input onChange={ fileChangeLocal }  type={'file'} ref={file}/>\r\n\t</div>)\r\n}\r\nexport default UploadWrapper","\r\n\r\n\r\nclass FileProcess {\r\n\tsize = 0;\r\n\tname = '';\r\n\tfileReader;\r\n\ttext = '';\r\n\r\n\tvalidateFile(file) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif (file !== undefined && file !== null && (/text/.test(file.type) || file.type === \"\")) {\r\n\t\t\t\tthis.fileReader = new FileReader()\r\n\t\t\t\tthis.fileReader.onload = () => {\r\n\t\t\t\t\tresolve(this.fileReader.result)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.fileReader.onerror = () => {\r\n\t\t\t\t\treject(\"Ошибка чтения файла\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.fileReader.onabort = () => {\r\n\t\t\t\t\treject(\"Чтение прервано\")\r\n\t\t\t\t}\r\n\t\t\t\tthis.fileReader.readAsText(file)\r\n\r\n\t\t\t} else {\r\n\t\t\t\treject(\"Файл не загружен или не является текстовым документом\")\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nconst fileProcess = new FileProcess();\r\nexport {fileProcess};","export const aboutText = {\r\n\t\"ru\": `<span class=\"mainAbout_title\">Что это такое?</span>\r\n\tMonograph - сервис, позволяющий проанализировать текст, в том числе провести частотный анализ слов и букв. Все что нужно - это загрузить текст в формате .txt в поле ниже. Это полностью бесплатно, регистрация не требуется :)\r\n\tТакже мы не используем куки, не храним Ваш IP-адрес, и другие данные.\r\n\t\r\n\tВнимание: текст перед анализом будет приведен в безличный вид (удалены окончания различных родов). Поддерживается только русский язык.`,\r\n\t'en': `\r\n\tWhat it is?\r\n\tMonograph is a service that allows you to analyze text, including frequency analysis of words and letters. All that is needed is to upload the text in .txt format in the field below. It is completely free, registration is not required :)\r\n\tWe also do not use cookies, do not store your IP address, and other data.\r\n\t\r\n\tAttention: the text before analysis will be reduced to an impersonal form (endings of various genera have been deleted). Only Russian language is supported.\r\n\t`\r\n} // TODO: make location with aboutText\r\n\r\n\r\n\r\n\r\nexport const excludeGramems = [\"PREP\", \"CONJ\", \"COMP\", \"NPRO\", \"PRCL\"]; // Endpoint: ./analyzeProcess@AnalyzeProcess\r\n\r\nexport const gramemeTitle = {\r\n\t\"NOUN\": \"Существительное\",\r\n\t\"ADJF\": \"Полное прилагательное\",\r\n\t\"ADJS\": \"Краткое прилагательное\",\r\n\t\"COMP\": \"Компоратив\",\r\n\t\"VERB\": \"Глагол (личная форма)\",\r\n\t\"INFN\": \"Инфинитив\",\r\n\t\"PRTF\": \"Причастие полное\",\r\n\t\"PRTS\": \"Причастие краткое\",\r\n\t\"GRND\": \"Деепричастие\",\r\n\t\"NUMR\": \"Числительное\",\r\n\t\"ADVB\": \"Наречие\",\r\n\t\"NPRO\": \"Местоимение\",\r\n\t\"PRED\": \"Предикатив\",\r\n\t\"PREP\": \"Предлог\",\r\n\t\"CONJ\": \"Союз\",\r\n\t\"PRCL\": \"Частица\",\r\n\t\"INTJ\": \"Междометие\",\r\n\t\"LATN\": \"Латиница\"\r\n\r\n\r\n}\r\n\r\n\r\nexport const maxWordsFrequencyIteration = 500;","import {maxWordsFrequencyIteration} from \"./config\";\r\n\r\nclass MakeDataForChart{\r\n\r\n\r\n\tsortObject(obj){\r\n\t\treturn Object.entries(obj).sort((a,b)=>b[1]-a[1]);\r\n\t}\r\n\r\n\r\n\tcreateDataToChart(words){ //struct pattern: [[label, value], [label1, value1] ...]\r\n\t\tif(typeof words !== 'object')\r\n\t\t\tthrow new Error(\"Данные для графиков не являются массивом\")\r\n\r\n\t\tlet tempWords = [],\r\n\t\t\ttempKeys = [];\r\n\t\tlet counter = 0;\r\n\t\tfor(let [key, value] of words){\r\n\t\t\tif(++counter > maxWordsFrequencyIteration)\r\n\t\t\t\tbreak;\r\n\t\t\ttempKeys.push(key)\r\n\t\t\ttempWords.push(value)\r\n\t\t}\r\n\r\n\t\treturn [tempKeys, tempWords]\r\n\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\nconst makeDataForChart = new MakeDataForChart()\r\n\r\nexport default makeDataForChart","class MakeDataForSummaryStatistic{\r\n\r\n\r\n\toutputData = {\r\n\t\tedited: {},\r\n\t\tinput: {},\r\n\t};\r\n\r\n\teditedWords = [];\r\n\r\n\tmakeData(text,words){\r\n\r\n\t\tthis.editedWords = typeof words === 'object' ? Object.keys(words) : [];\r\n\r\n\t\tthis.outputData.edited.countWords = typeof words === 'object' ? Object.keys(words).length : 0; //words.toString();\r\n\t\tthis.outputData.edited.rawText = this.editedWords.join(' ');\r\n\t\tthis.outputData.edited.countLetters = this.outputData.edited.rawText.split('').length;\r\n\r\n\t\tthis.outputData.input.countWords = text.split(' ').length;\r\n\t\tthis.outputData.input.rawText = text;\r\n\t\tthis.outputData.input.countLetters = text.split('').length\r\n\r\n\t\treturn this.outputData;\r\n\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nconst makeDataForSummaryStatistic = new MakeDataForSummaryStatistic();\r\n\r\nexport default makeDataForSummaryStatistic;","import {observable, decorate, computed, action} from 'mobx'\r\n\r\n\r\n\r\nclass LoggerAnalyze{\r\n\r\n\tisBarShow = false;\r\n\r\n\r\n\tcurrentText = 'Загрузка словарей...';\r\n\r\n\r\n\tmaxStep = 4;\r\n\r\n\r\n\tget isShow(){\r\n\t\treturn this.isBarShow;\r\n\t}\r\n\r\n\tget currentStepDescription(){\r\n\t\treturn this.currentText;\r\n\t}\r\n\r\n\r\n\tsetStep(text){\r\n\t\tconsole.log(text)\r\n\t\tthis.currentText = text;\r\n\t}\r\n\tshowBar(){\r\n\t\tthis.isBarShow = true;\r\n\t}\r\n\r\n\thideBar(){\r\n\t\tthis.isBarShow = false;\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\ndecorate(LoggerAnalyze, {\r\n\tisBarShow: observable,\r\n\tcurrentText: observable,\r\n\tcurrentStepDescription: computed,\r\n\tisShow: computed,\r\n\tshowBar: action,\r\n\thideBar: action,\r\n\tsetStep: action\r\n})\r\n\r\nconst loggerAnalyze = new LoggerAnalyze();\r\nexport default loggerAnalyze;","import {observable, decorate, action} from 'mobx'\r\n\r\n\r\n\r\nclass DataForWordFrequency{ //word Frequency\r\n\r\n\tdata = [];\r\n\r\n\tsetData(data){\r\n\t\tthis.data = data;\r\n\t}\r\n}\r\ndecorate(DataForWordFrequency, {\r\n\tdata: observable,\r\n\tsetData: action\r\n})\r\n\r\n\r\n\r\n\r\n\r\nclass DataForPhonemeFrequency{\r\n\tdata = [];\r\n\tsetData(data){\r\n\t\tthis.data = data;\r\n\t}\r\n}\r\ndecorate(DataForPhonemeFrequency, {\r\n\tdata: observable,\r\n\tsetData: action\r\n})\r\n\r\n\r\n\r\nclass DataForSummaryStatistic{\r\n\r\n\tdata = {\r\n\t\tedited: {\r\n\t\t\trawText: \"\",\r\n\t\t\tcountWords: 0,\r\n\t\t\tcountLetters: 0,\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\trawText: \"\",\r\n\t\t\tcountWords: 0,\r\n\t\t\tcountLetters: 0,\r\n\t\t}\r\n\t};\r\n\r\n\tsetData(data){\r\n\t\tthis.data = data;\r\n\t}\r\n\r\n}\r\ndecorate(DataForSummaryStatistic, {\r\n\ttext: observable,\r\n\tformattedText: observable,\r\n\tsetData: action\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst dataForWordFrequency = new DataForWordFrequency()\r\nconst dataForPhonemeFrequency = new DataForPhonemeFrequency()\r\nconst dataForSummaryStatistic = new DataForSummaryStatistic();\r\n\r\n\r\nexport  {dataForWordFrequency, dataForPhonemeFrequency, dataForSummaryStatistic}","import Az from '../az/dist/az'\r\nimport {excludeGramems} from \"./config\";\r\nimport makeData from './makeDataForChart'\r\nimport makeDataForSummaryStatistic from './makeDataForSummaryStatistic'\r\n\r\nimport loggerAnalyze from '../stores/uiLogger'\r\nimport {dataForWordFrequency, dataForPhonemeFrequency,  dataForSummaryStatistic} from \"../stores/dataForChartStore\";\r\n\r\n\r\nclass AnalyzeProcess{\r\n\ttokensObject;\r\n\tmorphemsObject;\r\n\tfilterTags = ['PUNCT', 'LINK', 'EMAIL', 'MARKUP', 'TAG', 'OTHER', 'CONTENT', 'SPACE', 'NUMBER']\r\n\ttext = \"\";\r\n\twords = {};\r\n\tphonemes = {};\r\n\ttokens = [];\r\n\tcountTokens = 0;\r\n\r\n\r\n\tmorphemsInit(){\r\n\t\treturn new Promise((resolve)=>{\r\n\t\t\tAz.Morph.init('/dicts/', ()=>{\r\n\r\n\t\t\t\tresolve(true)\r\n\t\t\t})\r\n\t\t})\r\n\r\n\r\n\r\n\t}\r\n\r\n\tstartAnalyze(text){\r\n\t\tthis.text = text;\r\n\t\tloggerAnalyze.showBar()\r\n\t\tloggerAnalyze.setStep(\"Загрузка словарей...\")\r\n\t\treturn this.morphemsInit()\r\n\t\t\t.then(resolve=>{\r\n\t\t\t\tloggerAnalyze.setStep(\"Токенизация текста...\")\r\n\t\t\t\treturn this.makeTokens()\r\n\t\t\t})\r\n\t\t\t.then(resolve=>{\r\n\t\t\t\tloggerAnalyze.setStep(\"Вычисление частоты слов и частей речи...\")\r\n\t\t\t\tthis.getWordsFrequency(resolve)\r\n\t\t\t})\r\n\t\t\t.then(resolve=>{\r\n\r\n\t\t\t\tloggerAnalyze.setStep(\"Подготовка данных...\")\r\n\t\t\t\tdataForSummaryStatistic.setData(makeDataForSummaryStatistic.makeData(this.text, this.words))\r\n\t\t\t\tdataForWordFrequency.setData(makeData.createDataToChart(makeData.sortObject(this.words)))\r\n\t\t\t\tdataForPhonemeFrequency.setData(makeData.createDataToChart(makeData.sortObject(this.phonemes)))\r\n\r\n\r\n\t\t\t\tloggerAnalyze.setStep(\"Готово!\")\r\n\r\n\t\t\t\tloggerAnalyze.hideBar();\r\n\t\t\t\tconsole.log('End Analyze')\r\n\t\t\t})\r\n\r\n\r\n\r\n\t}\r\n\r\n\r\n\tmakeTokens(){\r\n\t\treturn new Promise(resolve=>{\r\n\t\t\tthis.tokensObject = Az.Tokens(this.text)\r\n\t\t\tthis.tokens = this.tokensObject.done(this.filterTags, true);\r\n\t\t\tthis.countTokens = this.tokensObject.count(this.filterTags, true)\r\n\t\t\tresolve(this.tokens)\r\n\t\t})\r\n\r\n\r\n\t}\r\n\r\n\r\n\tgetWordsFrequency(tokens){\r\n\r\n\t\treturn new Promise((resolve, reject)=>{\r\n\r\n\t\t\tif(typeof tokens !== 'object')\r\n\t\t\t\treject(new Error('Массив токенов не является строкой'))\r\n\r\n\t\t\ttokens.map((elem)=>{\r\n\t\t\t\tlet word = this.getTextFromToken(elem)\r\n\r\n\t\t\t\tif(word === \"\"){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.words[word] !== undefined){\r\n\t\t\t\t\tthis.words[word]++;\r\n\t\t\t\t\treturn '1' // Increment count\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\tthis.words[word] = 1;\r\n\t\t\t\t\treturn '0'; // Added Word;\r\n\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t})\r\n\r\n\t\t\tresolve(true)\r\n\t\t})\r\n\r\n\r\n\r\n\r\n\r\n\t}\r\n\r\n\tgetTextFromToken(token){\r\n\r\n\t\t//console.log((token.source.substr(token.st,token.length).toLocaleLowerCase()))\r\n\t\treturn this.normalizeWord(token.source.substr(token.st,token.length).toLocaleLowerCase())\r\n\t}\r\n\r\n\r\n\r\n\tnormalizeWord(word){\r\n\t\ttry{\r\n\t\t\tlet tempWord = Az.Morph(word, {\"forceParse\": true})[0].normalize();\r\n\t\t\tthis.collectPhonems(tempWord.tag.POST);\r\n\t\t\treturn excludeGramems.includes(tempWord.tag.POST)?\"\":tempWord.word;\r\n\r\n\t\t}catch (e) {\r\n\t\t\treturn word;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcollectPhonems(phoneme){\r\n\t\tif(this.phonemes[phoneme] === undefined)\r\n\t\t\tthis.phonemes[phoneme] = 1;\r\n\t\telse\r\n\t\t\tthis.phonemes[phoneme]++;\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\n\r\nconst analyzeProcess = new AnalyzeProcess();\r\n\r\nexport default analyzeProcess;","import {observable, decorate, computed, action} from 'mobx'\r\n\r\n\r\nimport {fileProcess} from \"../core/fileProcess\";\r\nimport analyzeProcess from '../core/analyzeProcess'\r\n\r\nclass FileUploadStore{\r\n\ttext = \"\";\r\n\tisUploadedFile = false;\r\n\tisInsertedText = false;\r\n\terror = \"\"\r\n\tsecondSectionIsShow = false;\r\n\r\n\r\n\r\n\r\n\tget readyToProcess(){\r\n\r\n\t\treturn !(this.isUploadedFile || this.isInsertedText)\r\n\r\n\t}\r\n\r\n\tenterFile(file){\r\n\t\tfileProcess.validateFile(file)\r\n\t\t\t.then(result=>{\r\n\t\t\t\tthis.text = result;\r\n\t\t\t\treturn analyzeProcess.startAnalyze(result)\r\n\r\n\t\t\t}, error=>{\r\n\t\t\t\tthis.error = error\r\n\t\t\t})\r\n\t\t\t.then(resolve=>{\r\n\t\t\t\tthis.secondSectionIsShow = true;\r\n\t\t\t})\r\n\t\tthis.isUploadedFile = true;\r\n\t}\r\n\r\n\tclearError() {\r\n\t\tthis.error = '';\r\n\t}\r\n}\r\n\r\ndecorate(FileUploadStore, {\r\n\terror: observable,\r\n\ttext: observable,\r\n\tisInsertedText: observable,\r\n\tisUploadedFile: observable,\r\n\tsecondSectionIsShow: observable,\r\n\treadyToProcess: computed,\r\n\tenterFile: action,\r\n\tclearError: action,\r\n})\r\n\r\nconst fileUploadStore =  new FileUploadStore();\r\n\r\nexport {fileUploadStore};\r\n\r\n","import React, {Fragment} from 'react'\r\n\r\nimport {Alert} from 'rsuite'\r\n\r\n\r\n\r\nconst ErrorMessage = ({message,onCloseAlert})=>{\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{Alert.error(message, 3000, ()=>{onCloseAlert()})}\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage","import React, {Fragment} from 'react'\r\nimport {observer} from 'mobx-react'\r\n\r\nimport Upload from  '../components/Upload'\r\nimport {fileUploadStore} from '../stores/mainStore'\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\n\r\n\r\nconst handleFileChange = (e)=>{\r\n\tfileUploadStore.enterFile(e.files[0]);\r\n}\r\n\r\n\r\nconst handleCloseAlert = ()=>{\r\n\tfileUploadStore.error = \"\";\r\n}\r\n\r\n\r\nconst UploadContainer = ()=>{\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{fileUploadStore.error===\"\"?\"\":<ErrorMessage onCloseAlert={ handleCloseAlert} message={fileUploadStore.error}/>}\r\n\t\t\t<Upload  run={fileUploadStore.run} error={fileUploadStore.error} onCloseAlert={handleCloseAlert} readyToProcess={fileUploadStore.readyToProcess} onFileChange={handleFileChange}/>\r\n\t\t</Fragment>\r\n\r\n\t)\r\n\r\n\r\n}\r\n\r\nexport default observer(UploadContainer);\r\n","import React  from 'react'\r\n\r\nimport MainSectionAbout from './MainSectionAbout'\r\nimport UplodContainer from '../containers/UploadContainer'\r\n\r\nimport './MainSection.css'\r\n\r\n\r\n\r\nconst MainSection = ()=>(\r\n\t<div className={'mainSection'}>\r\n\r\n\t\t<MainSectionAbout/>\r\n\t\t<UplodContainer/>\r\n\t</div>\r\n\t)\r\n\r\nexport default MainSection;\r\n\r\n","import React from 'react'\r\n\r\nimport Particles from 'react-particles-js'\r\n\r\nimport './Background.css'\r\n\r\nconst canvasStyle = {\r\n\t\"position\": \"absolute\"\r\n}\r\n\r\nconst particleParams = {\r\n\t\"particles\": {\r\n\t\t\"number\": {\r\n\t\t\t\"value\": /Android|webOS|iPhone|iPad|iPod|Opera Mini/i.test(navigator.userAgent)?40:150\r\n\t\t},\r\n\t\t\"size\": {\r\n\t\t\t\"value\": 3\r\n\t\t},\r\n\t\t\"color\": {\r\n\t\t\t\"value\": \"#3f3a40\"\r\n\t\t},\r\n\t\t\"line_linked\": {\r\n\t\t\t\"enable_auto\": \"false\",\r\n\t\t\t\"opacity\": \"1\",\r\n\t\t\t\"color\":\"#3f3a40\",\r\n\t\t\t\"distance\": \"160\"\r\n\t\t}\r\n\t},\r\n\t\"interactivity\": {\r\n\t\t\"events\": {\r\n\t\t\t\"onhover\": {\r\n\t\t\t\t\"enable\": true,\r\n\t\t\t\t\"mode\": \"grab\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst ParticlesBackground = () => (\r\n\t<div className={'backGround'}>\r\n\t\t<Particles\r\n\t\t\tparams={particleParams}\r\n\t\t\tstyle={canvasStyle} />\r\n\t</div>);\r\n\r\nexport default ParticlesBackground;","\r\nimport React from 'react'\r\n\r\nimport Chart from 'react-apexcharts'\r\n\r\nimport './WordsFrequency.css'\r\n\r\n\r\n\r\nconst columnHeight = 16;\r\n\r\nconst WordFrequency = ({dataWF})=>{\r\n\r\n\tlet [words, count] = dataWF\r\n\tconst options ={\r\n\t\t//title: \"Частота встречаемых в тексте слов\",\r\n\t\tchart:{\r\n\t\t\theight: \"2000\",\r\n\t\t\twidth: \"50\",\r\n\t\t\tzoom: {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\ttype: 'x'\r\n\t\t\t},\r\n\t\t},\r\n\t\tplotOptions: {\r\n\t\t\tbar: {\r\n\t\t\t\thorizontal: true,\r\n\t\t\t},\r\n\t\t\tbarHeight:\"100%\",\r\n\t\t},\r\n\t\tdataLabels: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\txaxis: {\r\n\t\t\tcategories: words,\r\n\t\t\tposition: 'bottom',\r\n\t\t\tlabel:{\r\n\t\t\t\toffsetY: -18,\r\n\t\t\t},\r\n\t\t\taxisBorder: {\r\n\t\t\t\tshow: false\r\n\t\t\t},\r\n\t\t\taxisTicks: {\r\n\t\t\t\tshow: false\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconst serias = [{\r\n\t\tname: 'Количество слов',\r\n\t\tdata: count\r\n\t}]\r\n\t\tlet height = words !== undefined ? columnHeight*words.length : 150;\r\n\r\n\r\n\tconsole.log(height)\r\n\treturn (\r\n\t\t<div className={'chartWFContainer'}>\r\n\t\t\t<Chart height={height} series={serias} width={'99%'} type={\"bar\"} options={options}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default WordFrequency;\r\n//\r\n//\r\n// class LineChart extends React.Component {\r\n//\r\n// \tconstructor(props) {\r\n// \t\tsuper(props);\r\n//\r\n// \t\tthis.state = {\r\n// \t\t\toptions: {\r\n// \t\t\t\tchart: {\r\n// \t\t\t\t\tstacked: false,\r\n// \t\t\t\t\tzoom: {\r\n// \t\t\t\t\t\ttype: 'x',\r\n// \t\t\t\t\t\tenabled: true\r\n// \t\t\t\t\t},\r\n// \t\t\t\t\ttoolbar: {\r\n// \t\t\t\t\t\tautoSelected: 'zoom'\r\n// \t\t\t\t\t}\r\n// \t\t\t\t},\r\n// \t\t\t\tplotOptions: {\r\n// \t\t\t\t\tline: {\r\n// \t\t\t\t\t\tcurve: 'smooth',\r\n// \t\t\t\t\t}\r\n// \t\t\t\t},\r\n// \t\t\t\tdataLabels: {\r\n// \t\t\t\t\tenabled: false\r\n// \t\t\t\t},\r\n//\r\n// \t\t\t\tmarkers: {\r\n// \t\t\t\t\tsize: 0,\r\n// \t\t\t\t\tstyle: 'full',\r\n// \t\t\t\t},\r\n// \t\t\t\t//colors: ['#0165fc'],\r\n// \t\t\t\ttitle: {\r\n// \t\t\t\t\ttext: 'Stock Price Movement',\r\n// \t\t\t\t\talign: 'left'\r\n// \t\t\t\t},\r\n// \t\t\t\tfill: {\r\n// \t\t\t\t\ttype: 'gradient',\r\n// \t\t\t\t\tgradient: {\r\n// \t\t\t\t\t\tshadeIntensity: 1,\r\n// \t\t\t\t\t\tinverseColors: false,\r\n// \t\t\t\t\t\topacityFrom: 0.5,\r\n// \t\t\t\t\t\topacityTo: 0,\r\n// \t\t\t\t\t\tstops: [0, 90, 100]\r\n// \t\t\t\t\t},\r\n// \t\t\t\t},\r\n// \t\t\t\tyaxis: {\r\n// \t\t\t\t\tmin: 20000000,\r\n// \t\t\t\t\tmax: 250000000,\r\n// \t\t\t\t\tlabels: {\r\n// \t\t\t\t\t\tformatter: function (val) {\r\n// \t\t\t\t\t\t\treturn (val / 1000000).toFixed(0);\r\n// \t\t\t\t\t\t},\r\n// \t\t\t\t\t},\r\n// \t\t\t\t\ttitle: {\r\n// \t\t\t\t\t\ttext: 'Price'\r\n// \t\t\t\t\t},\r\n// \t\t\t\t},\r\n// \t\t\t\txaxis: {\r\n// \t\t\t\t\ttype: 'datetime',\r\n// \t\t\t\t},\r\n//\r\n// \t\t\t\ttooltip: {\r\n// \t\t\t\t\tshared: false,\r\n// \t\t\t\t\ty: {\r\n// \t\t\t\t\t\tformatter: function (val) {\r\n// \t\t\t\t\t\t\treturn (val / 1).toFixed(0)\r\n// \t\t\t\t\t\t}\r\n// \t\t\t\t\t}\r\n// \t\t\t\t}\r\n// \t\t\t},\r\n// \t\t\tseries: [{\r\n// \t\t\t\tname: 'XYZ MOTORS',\r\n// \t\t\t\tdata: [44, 55, 57, 56, 61, 58, 63, 60, 66,44, 55, 57, 56, 61, 58, 63, 60, 66,44, 55]\r\n// \t\t\t}],\r\n// \t\t}\r\n// \t}\r\n//\r\n// \trender() {\r\n//\r\n// \t\treturn (\r\n//\r\n//\r\n// \t\t\t<div id=\"chart\">\r\n// \t\t\t\t<ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height=\"350\"/>\r\n// \t\t\t</div>\r\n// \t\t)\r\n// \t}\r\n// }\r\n//\r\n// export default LineChart;","import React from 'react'\r\n\r\n\r\nimport {gramemeTitle} from \"../core/config\";\r\n\r\nimport Chart from 'react-apexcharts'\r\n\r\n\r\nconst PhonemeFrequencyRadar = ({dataForPF})=>{\r\n\tlet [phonemes, count] = dataForPF\r\n\tlet russianPhoneme = typeof phonemes === 'object' && phonemes.length!== 0 ? phonemes.map((current)=>{\r\n\t\tconsole.log(current)\r\n\t\tif(gramemeTitle[current] !== undefined)\r\n\t\t\treturn gramemeTitle[current];\r\n\t\telse\r\n\t\t\treturn current;\r\n\t}) : [];\r\n\tconsole.log(russianPhoneme)\r\n\tconst option = {\r\n\t\tlabels: russianPhoneme,\r\n\t\ttitle: {\r\n\t\t\ttext: ''\r\n\t\t}\r\n\t}\r\n\tconst series =  [{\r\n\t\tname: 'Series 1',\r\n\t\tdata: count,\r\n\t}]\r\n\r\n\r\n\treturn \t<Chart height={450} options={option} series={series} type={'radar'}/>\r\n\r\n}\r\n\r\n\r\nexport default PhonemeFrequencyRadar;","import React from 'react'\r\nimport { Grid, Row, Col, PanelGroup, Panel,Progress, Tag} from 'rsuite';\r\nimport {Tab, TabList, TabPanel, Tabs} from \"react-tabs\";\r\n\r\nimport './SummaryStatistics.css'\r\n\r\nlet {Line} = Progress\r\n\r\n\r\n\r\n\r\nconst SummaryStatistic = ({dataSS})=>{\r\n\r\n\t\tlet progressWords = ((dataSS.edited.countWords/dataSS.input.countWords).toFixed(2))*100,\r\n\t\t\tprogressLetters = ((dataSS.edited.countLetters/dataSS.input.countLetters).toFixed(2))*100\r\n\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<Grid fluid>\r\n\t\t\t\t<Row className=\"show-grid\">\r\n\t\t\t\t\t<Col xs={10} >\r\n\t\t\t\t\t\t<PanelGroup  bordered>\r\n\t\t\t\t\t\t\t<Panel header=\"Исходный текст\" >\r\n\t\t\t\t\t\t\t\tКоличество слов: <Tag color={'cyan'}>{dataSS.input.countWords}</Tag>\r\n\t\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t\tКоличество букв: <Tag color={'cyan'}>{dataSS.input.countLetters}</Tag>\r\n\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t<Panel header=\"Обработанный текст\">\r\n\t\t\t\t\t\t\t\tКоличество слов: <Tag color={'cyan'}>{dataSS.edited.countWords}</Tag>\r\n\t\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t\tКоличество букв: <Tag color={'cyan'}>{dataSS.edited.countLetters}</Tag>\r\n\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t<Panel header={'Статистика'}>\r\n\t\t\t\t\t\t\t\t<p>Количество слов в исходном/обработанном тексте: </p>\r\n\t\t\t\t\t\t\t\t<Line percent={progressWords} strokeColor={\"#00bb00\"} trailColor={'red'}/>\r\n\t\t\t\t\t\t\t\t<p>Количество букв в исходном/обработанном тексте: </p>\r\n\t\t\t\t\t\t\t\t<Line percent={progressLetters} strokeColor={\"#00bb00\"} trailColor={'red'} />\r\n\r\n\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t</PanelGroup>\r\n\r\n\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col xs={14}>\r\n\t\t\t\t\t\t<Tabs>\r\n\t\t\t\t\t\t\t<TabList>\r\n\t\t\t\t\t\t\t\t<Tab>Исходный текст</Tab>\r\n\t\t\t\t\t\t\t\t<Tab>Обработанный текст</Tab>\r\n\t\t\t\t\t\t\t</TabList>\r\n\r\n\t\t\t\t\t\t\t<TabPanel>\r\n\t\t\t\t\t\t\t\t<textarea value={dataSS.input.rawText} readOnly={true} rows={24} className={'textareaRawText'}/>\r\n\t\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t\t<TabPanel>\r\n\t\t\t\t\t\t\t\t<textarea value={dataSS.edited.rawText} readOnly={true} rows={24} className={'textareaRawText'}/>\r\n\t\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Grid>\r\n\r\n\t\t)\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default SummaryStatistic","import React from 'react'\r\nimport './AnalyzeSection.css'\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\nimport WordFrequencyChart from '../charts/WordsFrequence'\r\nimport PhonemeFrequency from '../charts/PhonemeFrequencyRadar'\r\nimport SummaryStatistic from '../charts/SummaryStatistic'\r\nimport {Tab, TabList, TabPanel, Tabs} from \"react-tabs\";\r\n\r\n\r\n\r\n\r\nconst AnalyzeSection = ({isShow, dataWordsFrequency, dataPhonemeFrequency, dataSummaryStatistics})=>{\r\n\tlet classes = (isShow === true)?\"show\":\"\";\r\n\tclasses = classes+' analyzeSectionWrapper'\r\n\treturn (\r\n\t\t\t<div className={classes}>\r\n\t\t\t\t<div className={'analyzeSectionBackground'}>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={'analyzeSectionMainContainer'}>\r\n\t\t\t\t\t<Tabs>\r\n\t\t\t\t\t\t<TabList>\r\n\t\t\t\t\t\t\t<Tab>Суммарная статистика</Tab>\r\n\t\t\t\t\t\t\t<Tab>Частота слов</Tab>\r\n\t\t\t\t\t\t\t<Tab>Частота частей речи</Tab>\r\n\t\t\t\t\t\t</TabList>\r\n\r\n\t\t\t\t\t\t<TabPanel>\r\n\t\t\t\t\t\t\t<SummaryStatistic dataSS={dataSummaryStatistics}/>\r\n\r\n\t\t\t\t\t\t</TabPanel>\r\n\r\n\t\t\t\t\t\t<TabPanel>\r\n\t\t\t\t\t\t\t<WordFrequencyChart dataWF={dataWordsFrequency}/>\r\n\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t<TabPanel>\r\n\t\t\t\t\t\t\t<PhonemeFrequency dataForPF={dataPhonemeFrequency}/>\r\n\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t)\r\n}\r\n\r\nexport default AnalyzeSection;","import React from 'react'\r\nimport {observer} from 'mobx-react'\r\n\r\nimport {fileUploadStore} from \"../stores/mainStore\";\r\nimport {dataForWordFrequency, dataForPhonemeFrequency, dataForSummaryStatistic} from \"../stores/dataForChartStore\";\r\n\r\nimport AnalyzeSection from '../components/AnalyzeSection'\r\n\r\n\r\nlet data = dataForWordFrequency.data;\r\n\r\ndata = typeof data === 'object' && data.length > 0 ? data: [[],[]]\r\n\r\nconst AnalyzeSectionContainer = () => {\r\n\r\n\treturn (<AnalyzeSection dataPhonemeFrequency={dataForPhonemeFrequency.data}\r\n\t\t\t\t\t\t\tdataWordsFrequency={dataForWordFrequency.data}\r\n\t\t\t\t\t\t\tdataSummaryStatistics={dataForSummaryStatistic.data}\r\n\t\t\t\t\t\t\tisShow={fileUploadStore.secondSectionIsShow}\r\n\r\n\t/>)\r\n\r\n\r\n}\r\n\r\nexport default observer(AnalyzeSectionContainer);","import React from 'react'\r\n\r\nimport { Loader } from 'rsuite';\r\n\r\n\r\nimport './Loading.css'\r\n\r\n\r\nconst Loading = ({currentStep, isShow})=>{\r\n\r\n\tlet classes = (isShow === true)?\"show\":\"\";\r\n\tclasses = classes+' loadingWrapper'\r\n\r\n\treturn (\r\n\t\t<div className={classes}>\r\n\r\n\t\t\t<Loader inverse center size=\"lg\" content={currentStep} />\r\n\r\n\r\n\r\n\t\t</div>\r\n\t)\r\n\r\n\r\n}\r\n\r\nexport default Loading;","import React from 'react'\r\nimport {observer} from 'mobx-react'\r\n\r\nimport Loading from '../components/Loading'\r\n\r\n\r\nimport loggerAnalyze from '../stores/uiLogger'\r\n\r\nconst LoadingContainer = () => {\r\n\r\n\treturn (\r\n\t\t<Loading isShow={loggerAnalyze.isShow} currentStep={loggerAnalyze.currentStepDescription}/>\r\n\t)\r\n\r\n}\r\n\r\nexport default observer(LoadingContainer);","import React, {Fragment} from 'react';\n\nimport MainSection from './components/MainSection';\nimport Background from './components/Background.jsx'\nimport AnalyzeSectionContainer from \"./containers/AnalyzeSectionContainer\";\nimport LoadingContainer from './containers/LoadingContainer'\n\n\nconst App = ()=>(\n\t<Fragment>\n\t\t<MainSection/>\n\t\t<AnalyzeSectionContainer/>\n\t\t<LoadingContainer currentStep={'словарей'}/>\n\t\t<Background/>\n\t</Fragment>\n\n\n)\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'rsuite/dist/styles/rsuite.min.css';\nimport './index.css'\n\n\nimport App from './App';\n\n\n\n\n\n\nReactDOM.render(\n\t<App/>\n\t, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}